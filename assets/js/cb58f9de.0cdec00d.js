"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[8503],{30876:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(t),d=i,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},91772:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var r=t(7896),i=t(31461),a=(t(67294),t(30876)),o=["components"],s={id:"use-collapse",category:"UI & DOM",title:"useCollapse",description:"Show or hide associated section of content.",pagination_prev:"web/hooks/use-print",pagination_next:"web/hooks/use-media-query"},l=void 0,u={unversionedId:"web/hooks/use-collapse",id:"web/hooks/use-collapse",isDocsHomePage:!1,title:"useCollapse",description:"Show or hide associated section of content.",source:"@site/docs/web/hooks/useCollapse.md",sourceDirName:"web/hooks",slug:"/web/hooks/use-collapse",permalink:"/web/hooks/use-collapse",tags:[],version:"current",frontMatter:{id:"use-collapse",category:"UI & DOM",title:"useCollapse",description:"Show or hide associated section of content.",pagination_prev:"web/hooks/use-print",pagination_next:"web/hooks/use-media-query"},sidebar:"docs",previous:{title:"usePrint",permalink:"/web/hooks/use-print"},next:{title:"useMediaQuery",permalink:"/web/hooks/use-media-query"}},p=[{value:"Usage",id:"usage",children:[],level:2},{value:"Maximum Duration",id:"maximum-duration",children:[],level:2},{value:"Properties",id:"properties",children:[],level:2}],c={toc:p};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useCollapse } from '@abyss/web/hooks/useCollapse';\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultIsOpen")," prop to set the initial state for collapse container. The ",(0,a.kt)("inlineCode",{parentName:"p"},"duration")," prop is defaulted to ",(0,a.kt)("inlineCode",{parentName:"p"},"300ms"),", we can pass custom values to vary the transition time."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const { collapseProps, buttonProps, isOpen } = useCollapse();\n  return (\n    <React.Fragment>\n      <Layout.Group>\n        <Label>Collpase Example:</Label>\n        <Link {...buttonProps}>{isOpen ? 'Collapse' : 'Expand'}</Link>\n      </Layout.Group>\n      <div {...collapseProps}>\n        <ul style={{ listStyle: 'inside' }}>\n          <li>Aliquam non felis convallis, tempus eros vel, sagittis augue.</li>\n          <li>\n            Praesent hendrerit ipsum viverra, facilisis risus et, sollicitudin\n            massa.\n          </li>\n          <li>Morbi tincidunt metus vitae quam semper hendrerit.</li>\n          <li>\n            Fusce accumsan mi ut risus molestie, pretium fringilla risus\n            consectetur.\n          </li>\n          <li>Nullam vel mi gravida, eleifend est vitae, semper mauris.</li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n};\n")),(0,a.kt)("h2",{id:"maximum-duration"},"Maximum Duration"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"duration")," prop allows Maximum value of ",(0,a.kt)("inlineCode",{parentName:"p"},"1500ms")," for the transition timing to show and hide content. If developer enters the duration greater than max duration value(1500ms) we will assign duration to ",(0,a.kt)("inlineCode",{parentName:"p"},"1500ms"),". default value is ",(0,a.kt)("inlineCode",{parentName:"p"},"300ms"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const { collapseProps, buttonProps, isOpen } = useCollapse({\n    duration: 1500,\n  });\n\n  return (\n    <React.Fragment>\n      <Layout.Group>\n        <Label>Collapse Example:</Label>\n        <Link {...buttonProps}>{isOpen ? 'Collapse' : 'Expand'}</Link>\n      </Layout.Group>\n      <p style={{ margin: 0 }}>Showing Content Based on Duration</p>\n      <div {...collapseProps}>\n        <ul style={{ listStyle: 'inside' }}>\n          <li>Aliquam non felis convallis, tempus eros vel, sagittis augue.</li>\n          <li>\n            Praesent hendrerit ipsum viverra, facilisis risus et, sollicitudin\n            massa.\n          </li>\n          <li>Morbi tincidunt metus vitae quam semper hendrerit.</li>\n          <li>\n            Fusce accumsan mi ut risus molestie, pretium fringilla risus\n            consectetur.\n          </li>\n          <li>Nullam vel mi gravida, eleifend est vitae, semper mauris.</li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n};\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"useCollapse(\n  defaultIsOpen?: boolean,\n  ref?: object,\n  duration?: number,\n): object;\n")))}m.isMDXComponent=!0}}]);