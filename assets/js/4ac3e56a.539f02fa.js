"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[8288],{35055:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>k,frontMatter:()=>c,metadata:()=>p,toc:()=>b});var o,a=t(7896),r=t(31461),l=(t(2784),t(3905)),i=["components"],c={id:"checkbox",category:"Control",title:"Checkbox",description:"Used to mark an option as true/checked or false/not checked",design:"https://www.figma.com/file/wCMblLsq9TxAQvKzY3EfCt/Abyss-Mobile?node-id=9602%3A34536"},s=void 0,p={unversionedId:"mobile/ui/checkbox",id:"mobile/ui/checkbox",isDocsHomePage:!1,title:"Checkbox",description:"Used to mark an option as true/checked or false/not checked",source:"@site/docs/mobile/ui/Checkbox.md",sourceDirName:"mobile/ui",slug:"/mobile/ui/checkbox",permalink:"/mobile/ui/checkbox",tags:[],version:"current",frontMatter:{id:"checkbox",category:"Control",title:"Checkbox",description:"Used to mark an option as true/checked or false/not checked",design:"https://www.figma.com/file/wCMblLsq9TxAQvKzY3EfCt/Abyss-Mobile?node-id=9602%3A34536"},sidebar:"mobile",previous:{title:"Card",permalink:"/mobile/ui/card"},next:{title:"Heading",permalink:"/mobile/ui/heading"}},b=[{value:"States",id:"states",children:[],level:2},{value:"useState",id:"usestate",children:[],level:2},{value:"Align",id:"align",children:[],level:2}],d=(o="Tab",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)}),h={toc:b};function k(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)(d,{label:"Overview",mdxType:"Tab"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Checkbox } from '@abyss/mobile/ui/Checkbox';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"sandbox",sandbox:!0},"{\n  component: 'Checkbox',\n  inputs: [\n    {\n      prop: 'label',\n      type: 'string',\n    },\n    {\n      prop: 'align',\n      type: 'select',\n      options: [\n        { label: 'left', value: 'left' },\n        { label: 'right', value: 'right' },\n      ],\n    },\n    {\n      prop: 'isDisabled',\n      type: 'boolean',\n    },\n    {\n      prop: 'isIndeterminate',\n      type: 'boolean',\n    },\n  ]\n}\n\n() => {\n  const [isChecked, setChecked] = useState(true);\n\n  return (\n    <Checkbox\n      label=\"I agree\"\n      isChecked={isChecked}\n      onChange={(value) => setChecked(value)}\n    />\n  );\n};\n")),(0,l.kt)("h2",{id:"states"},"States"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("b",null,"Default")," - The default checkbox is unchecked."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("b",null,"Checked")," - Use the `isChecked` prop to mark a checkbox as checked."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("b",null,"Indeterminate")," - Use the `isIndeterminate` prop to set the checkbox as indeterminate."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("b",null,"Disabled")," - Use the `isDisabled` prop to disable a checkbox. A disabled checkbox is unusable and un-clickable."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("b",null,"Help Text")," - Use the `helpText` prop to insert helpful text below the checkbox."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("b",null,"Error Message")," - Use the `errorMessage` prop to display a custom error message below the checkbox.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const [isChecked, setChecked] = useState(true);\n\n  return (\n    <Layout.Stack alignItems="left">\n      <Checkbox label="Default Checkbox" />\n      <Checkbox label="Checked Checkbox" isChecked={isChecked} />\n      <Checkbox label="Indeterminate Checkbox" isIndeterminate isChecked />\n      <Checkbox label="Disabled Checkbox" isDisabled />\n      <Checkbox label="Disabled Checked Checkbox" isChecked isDisabled />\n      <Checkbox\n        label="Disabled Indeterminate Checkbox"\n        isChecked\n        isIndeterminate\n        isDisabled\n      />\n      <Checkbox label="Checkbox with Help Text" helpText="Help Text Message" />\n      <Checkbox label="Checkbox with Error" errorMessage="Error Message" />\n    </Layout.Stack>\n  );\n};\n')),(0,l.kt)("h2",{id:"usestate"},"useState"),(0,l.kt)("p",null,"Using the ",(0,l.kt)("inlineCode",{parentName:"p"},"useState")," hook gets values from the component state."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const [isChecked, setChecked] = useState(true);\n\n  return (\n    <Checkbox\n      label="State Checkbox"\n      isChecked={isChecked}\n      onChange={(value) => setChecked(value)}\n    />\n  );\n};\n')),(0,l.kt)("h2",{id:"align"},"Align"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"align")," prop determines which side the checkbox is on. The options are ",(0,l.kt)("inlineCode",{parentName:"p"},"left")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"right"),".\nWhen the align prop is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"right"),", the label stays on the left and only the checkbox is set\nto the rightmost edge of is container. The default is ",(0,l.kt)("inlineCode",{parentName:"p"},"left"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Layout.Stack grow>\n  <Checkbox label="Left Align" align="left" />\n  <Checkbox label="Right Align" align="right" />\n</Layout.Stack>\n'))),(0,l.kt)(d,{label:"Integration",mdxType:"Tab"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={Checkbox}\n  rows={[\n    {\n      name: 'onChange',\n      type: 'function',\n      description: 'Callback fired everytime the value changes',\n    },\n    {\n      name: 'isChecked',\n      type: 'boolean',\n      description: 'Flag to turn checkbox on or off',\n    },\n    {\n      name: 'label',\n      type: 'string',\n      description: 'Label of the checkbox',\n    },\n    {\n      name: 'isDisabled',\n      type: 'boolean',\n      description:\n        'Flag to enable/disable the checkbox. If true, the checkbox will be disabled',\n    },\n    {\n      name: 'children',\n      type: 'node',\n      description: 'The contents of the checkbox component',\n    },\n    {\n      name: 'isIndeterminate',\n      type: 'boolean',\n      description: 'Set the checkbox to indeterminate or not',\n    },\n    {\n      name: 'helpText',\n      type: 'string',\n      description: 'Set the subtext displayed below the checkbox',\n    },\n    {\n      name: 'errorMessage',\n      type: 'string',\n      description: 'Set the error message displayed below the checkbox',\n    },\n    {\n      name: 'align',\n      type: '\"left\" | \"right',\n      description: 'The side the checkbox should be aligned to',\n    },\n  ]}\n/>\n"))))}k.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var o=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),h=a,k=d["".concat(c,".").concat(h)]||d[h]||b[h]||r;return t?o.createElement(k,l(l({ref:n},p),{},{components:t})):o.createElement(k,l({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);