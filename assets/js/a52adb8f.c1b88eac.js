"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[127],{30876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},65790:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(7896),a=n(31461),s=(n(67294),n(30876)),i=["components"],o={id:"component-testing",title:"Component Testing",description:"Guide on how to facilitate testing of Abyss components."},l=void 0,c={unversionedId:"developers/component-testing",id:"developers/component-testing",isDocsHomePage:!1,title:"Component Testing",description:"Guide on how to facilitate testing of Abyss components.",source:"@site/docs/developers/component-testing.md",sourceDirName:"developers",slug:"/developers/component-testing",permalink:"/developers/component-testing",tags:[],version:"current",frontMatter:{id:"component-testing",title:"Component Testing",description:"Guide on how to facilitate testing of Abyss components."},sidebar:"docs",previous:{title:"Style Customization",permalink:"/developers/style-customization"},next:{title:"Accessibility Testing",permalink:"/developers/accessibility-testing"}},p=[{value:"data-testid",id:"data-testid",children:[],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"data-testid"},"data-testid"),(0,s.kt)("p",null,"To facilitate the usage of component testing libraries such as ",(0,s.kt)("strong",{parentName:"p"},"React Testing Library")," you have the option of adding a ",(0,s.kt)("inlineCode",{parentName:"p"},"data-testid")," attribute to a component's corresponding elements. By passing ",(0,s.kt)("inlineCode",{parentName:"p"},"data-testid")," in as a prop with a value of the desired string id this attribute will be appended to all component elements that include a unique Abyss class name. Please see the Integration tab and the Classes sub-heading for each component to determine which elements will receive this test id. The resulting ",(0,s.kt)("inlineCode",{parentName:"p"},"data-testid")," value will be a concatenated string that combines the value passed in with the prop and the element's unique class name. For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'<TextInput model="dataTestId" data-testid="test-id" />\n')),(0,s.kt)("br",null),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},'() => {\n  const form = useForm();\n\n  return (\n    <FormProvider state={form}>\n      <TextInput\n        model="dataTestId"\n        placeholder="Text Input with data-testid"\n        data-testid="test-id"\n      />\n    </FormProvider>\n  );\n};\n')),(0,s.kt)("br",null),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},'() => {\n  const elements = `<div class="c-jtltpf c-fixGjY c-jtltpf-ifGHEql-css abyss-text-input-root" data-testid="test-id-abyss-text-input-root">\n  <label class="c-ffJdOf abyss-text-input-label" data-testid="test-id-abyss-text-input-label" for="abyss-39sezk4o0" id="abyss-yrptitziy"></label>\n  <div class="c-dxVmU">\n    <input name="dataTestId" id="abyss-39sezk4o0" aria-invalid="false" autocomplete="off" type="text" class="c-cZywkZ c-cZywkZ-dZAInb-inputType-text c-cZywkZ-iPJLV-css abyss-text-input" data-testid="test-id-abyss-text-input">\n  </div>\n  <div class="c-PJLV abyss-text-input-descriptors" data-testid="test-id-abyss-text-input-descriptors"></div>\n</div>`;\n\n  return <CodeHighlighter code={elements} language="html" />;\n};\n')))}u.isMDXComponent=!0}}]);