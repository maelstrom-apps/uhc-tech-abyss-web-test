"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[3837],{11762:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>m,frontMatter:()=>d,metadata:()=>p,toc:()=>c});var i,r=t(7896),a=t(31461),o=(t(2784),t(3905)),l=["components"],d={id:"divider",category:"Layout",title:"Divider",description:"Used to add visual or semantic separation between content.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/branch/Pj4hylkP9W3NOo4oxdJhhg/Abyss-Design-System?node-id=19923%3A77152",pagination_prev:"web/ui/box",pagination_next:"web/ui/flex"},s=void 0,p={unversionedId:"web/ui/divider",id:"web/ui/divider",isDocsHomePage:!1,title:"Divider",description:"Used to add visual or semantic separation between content.",source:"@site/docs/web/ui/Divider.md",sourceDirName:"web/ui",slug:"/web/ui/divider",permalink:"/web/ui/divider",tags:[],version:"current",frontMatter:{id:"divider",category:"Layout",title:"Divider",description:"Used to add visual or semantic separation between content.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/branch/Pj4hylkP9W3NOo4oxdJhhg/Abyss-Design-System?node-id=19923%3A77152",pagination_prev:"web/ui/box",pagination_next:"web/ui/flex"},sidebar:"docs",previous:{title:"Box",permalink:"/web/ui/box"},next:{title:"Flex",permalink:"/web/ui/flex"}},c=[{value:"Usage",id:"usage",children:[],level:2},{value:"Orientation",id:"orientation",children:[],level:2},{value:"Width and Height",id:"width-and-height",children:[],level:2},{value:"Color",id:"color",children:[],level:2}],u=(i="Tab",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),h={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(u,{label:"Overview",mdxType:"Tab"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Divider } from '@abyss/web/ui/Divider';\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"sandbox",sandbox:!0},"{\n  component: 'Divider',\n  inputs: [\n    {\n      prop: 'orientation',\n      type: 'select',\n      options: [\n        { label: 'horizontal', value: 'horizontal' },\n        { label: 'vertical', value: 'vertical' },\n      ],\n    },\n    {\n      prop: 'margin',\n      type: 'string',\n    },\n    {\n      prop: 'height',\n      type: 'string',\n    },\n    {\n      prop: 'width',\n      type: 'string',\n    },\n    {\n      prop: 'color',\n      type: 'string',\n    },\n  ]\n}\n\n<div style={{ height: '320px' }}>\n  <Divider/>\n</div>\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const VerticalDivider = () => (\n    <Divider orientation=\"vertical\" height={20} color=\"$gray5\" />\n  );\n\n  return (\n    <Card\n      css={{\n        'abyss-card-root': {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: '$gray2',\n          height: '350px',\n          padding: '50px',\n        },\n      }}\n    >\n      <Layout.Stack\n        alignItems=\"left\"\n        grow\n        css={{ 'abyss-layout-stack': { maxWidth: '350px' } }}\n      >\n        <h3>Abyss Divider component</h3>\n        <Divider orientation=\"horizontal\" color=\"$gray5\" />\n        <Text>Add visual separation between content</Text>\n        <Layout.Group>\n          <Link href=\"#orientation\">Orientation</Link>\n          <VerticalDivider />\n          <Link href=\"#width-and-height\">Width</Link>\n          <VerticalDivider />\n          <Link href=\"#width-and-height\">Height</Link>\n          <VerticalDivider />\n          <Link href=\"#color\">Color</Link>\n        </Layout.Group>\n      </Layout.Stack>\n    </Card>\n  );\n};\n")),(0,o.kt)("h2",{id:"orientation"},"Orientation"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"orientation")," prop to adjust the orientation to either ",(0,o.kt)("inlineCode",{parentName:"p"},"horizontal")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"vertical"),". The default setting is ",(0,o.kt)("inlineCode",{parentName:"p"},"horizontal"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Divider orientation="horizontal" />\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<div style={{ height: '200px' }}>\n  <Divider orientation=\"vertical\" />\n</div>\n")),(0,o.kt)("h2",{id:"width-and-height"},"Width and Height"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"width")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," props to set the desired sizing dimensions."),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"horizontal")," orientation is selected the settings are applied as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"width")," : determines the left-to-right length of the of the divider; default setting is ",(0,o.kt)("inlineCode",{parentName:"li"},"100%")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"height")," : determines the thickness of the divider; default setting is ",(0,o.kt)("inlineCode",{parentName:"li"},"2px"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Divider orientation="horizontal" width={50} height={3} />\n')),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"vertical")," orientation is selected the settings are applied as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"width")," : determines the thickness of the divider; default setting is ",(0,o.kt)("inlineCode",{parentName:"li"},"2px")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"height")," : determines the top-to-bottom length of the of the divider; default setting is ",(0,o.kt)("inlineCode",{parentName:"li"},"100%"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<div style={{ height: '50px' }}>\n  <Divider orientation=\"vertical\" height={50} width={3} />\n</div>\n")),(0,o.kt)("h2",{id:"color"},"Color"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"color")," property to set the color of the divider. The default setting is ",(0,o.kt)("inlineCode",{parentName:"p"},"$gray4"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Divider color="$primary1" />\n'))),(0,o.kt)(u,{label:"Integration",mdxType:"Tab"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={Divider}\n  rows={[\n    {\n      name: 'orientation',\n      type: \"'horizontal' | 'vertical'\",\n      description: 'The orientation of the divider',\n    },\n    {\n      name: 'color',\n      type: 'string',\n      description: 'The color of the divider',\n    },\n    {\n      name: 'margin',\n      type: 'number | string',\n      description: 'Margin between the divider and surrounding elements',\n    },\n    {\n      name: 'width',\n      type: 'number | string',\n      description: 'The width of the divider',\n    },\n    {\n      name: 'height',\n      type: 'number | string',\n      description: 'The height of the divider',\n    },\n  ]}\n/>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={Divider}\n  rows={[\n    {\n      name: 'divider-root',\n      description: 'Divider root element',\n    },\n  ]}\n/>\n"))))}m.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var i=t(2784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=i.createContext({}),s=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return i.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),h=r,m=u["".concat(d,".").concat(h)]||u[h]||c[h]||a;return t?i.createElement(m,o(o({ref:n},p),{},{components:t})):i.createElement(m,o({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);