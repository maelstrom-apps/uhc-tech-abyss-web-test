"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[8530],{86741:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>p,toc:()=>d});var o,a=t(7896),i=t(31461),r=(t(2784),t(3905)),l=["components"],c={id:"icon-material",category:"Media",title:"IconMaterial",description:"Used to implement material icons and adapt their properties.",design:"https://www.figma.com/file/anZoHg026SyKJHWGJ7Vf4Q/Abyss-Icons?node-id=1%3A432"},s=void 0,p={unversionedId:"mobile/ui/icon-material",id:"mobile/ui/icon-material",isDocsHomePage:!1,title:"IconMaterial",description:"Used to implement material icons and adapt their properties.",source:"@site/docs/mobile/ui/IconMaterial.md",sourceDirName:"mobile/ui",slug:"/mobile/ui/icon-material",permalink:"/mobile/ui/icon-material",tags:[],version:"current",frontMatter:{id:"icon-material",category:"Media",title:"IconMaterial",description:"Used to implement material icons and adapt their properties.",design:"https://www.figma.com/file/anZoHg026SyKJHWGJ7Vf4Q/Abyss-Icons?node-id=1%3A432"},sidebar:"mobile",previous:{title:"Icon",permalink:"/mobile/ui/icon"},next:{title:"Link",permalink:"/mobile/ui/link"}},d=[{value:"Icons",id:"icons",children:[],level:2},{value:"Colors",id:"colors",children:[],level:2},{value:"Size",id:"size",children:[],level:2},{value:"Material Icon Variants",id:"material-icon-variants",children:[],level:2}],m=(o="Tab",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),u={toc:d};function f(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(m,{label:"Overview",mdxType:"Tab"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { IconMaterial } from '@abyss/mobile/ui/IconMaterial';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"sandbox",sandbox:!0},"{\n  component: 'IconMaterial',\n  inputs: [\n    {\n      prop: 'icon',\n      type: 'string',\n    },\n    {\n      prop: 'color',\n      type: 'string',\n    },\n    {\n      prop: 'size',\n      type: 'string',\n    },\n    {\n      prop: 'variant',\n      type: 'select',\n      options: [\n        { label: 'filled', value: 'filled' },\n        { label: 'outlined', value: 'outlined' },\n      ],\n    },\n  ]\n}\n\n<IconMaterial icon=\"home\" size={40} variant=\"filled\" color=\"$interactive1\" />\n\n")),(0,r.kt)("h2",{id:"icons"},"Icons"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"icon")," property to adjust which icon is being selected."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Layout.Group>\n  <IconMaterial icon="bookmarks" size={24} />\n  <IconMaterial icon="face" size={24} />\n  <IconMaterial icon="home" size={24} />\n</Layout.Group>\n')),(0,r.kt)("h2",{id:"colors"},"Colors"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"color")," property to adjust the color of a Google material icon. Theme colors can be found in the ",(0,r.kt)("a",{parentName:"p",href:"/mobile/foundations/uhc/colors"},"Colors")," documentation section or a hex code can be used. The default color is set to the theme ",(0,r.kt)("inlineCode",{parentName:"p"},"'interactive1'"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Layout.Group>\n  <IconMaterial icon="home" size={24} />\n  <IconMaterial icon="home" size={24} color="$success1" />\n  <IconMaterial icon="home" size={24} color="$error1" />\n  <IconMaterial icon="home" size={24} color="$primary1" />\n  <IconMaterial icon="home" size={24} color="#00ff00" />\n  <IconMaterial icon="home" size={24} color="violet" />\n</Layout.Group>\n')),(0,r.kt)("h2",{id:"size"},"Size"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," property to adjust the size of an icon by setting it to a specific number. The default size is set to 24."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Layout.Group>\n  <IconMaterial icon="home" size={16} />\n  <IconMaterial icon="home" size={20} />\n  <IconMaterial icon="home" />\n</Layout.Group>\n')),(0,r.kt)("h2",{id:"material-icon-variants"},"Material Icon Variants"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"variant")," property to change the style of Material icons. The default variant is ",(0,r.kt)("inlineCode",{parentName:"p"},"filled"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Web.Grid columns={5} span={{ md: \'50%\', lg: \'20%\' }}>\n  <Web.Grid.Col>\n    <Box padding="$sm" color="$white">\n      <Layout.Stack grow space={0}>\n        <div style={{ lineHeight: 2 }}>filled</div>\n        <div style={{ lineHeight: 2 }}>outlined</div>\n      </Layout.Stack>\n    </Box>\n  </Web.Grid.Col>\n  <Web.Grid.Col>\n    <Box padding="$sm" color="$white">\n      <Layout.Stack grow space={2}>\n        <IconMaterial icon="health_and_safety" size={24} variant="filled" />\n        <IconMaterial icon="health_and_safety" size={24} variant="outlined" />\n      </Layout.Stack>\n    </Box>\n  </Web.Grid.Col>\n  <Web.Grid.Col>\n    <Box padding="$sm" color="$tint3">\n      <Layout.Stack grow space={2}>\n        <IconMaterial icon="health_and_safety" size={24} variant="filled" />\n        <IconMaterial icon="health_and_safety" size={24} variant="outlined" />\n      </Layout.Stack>\n    </Box>\n  </Web.Grid.Col>\n  <Web.Grid.Col>\n    <Box padding="$sm" color="$tint4">\n      <Layout.Stack grow space={2}>\n        <IconMaterial icon="health_and_safety" size={24} variant="filled" />\n        <IconMaterial icon="health_and_safety" size={24} variant="outlined" />\n      </Layout.Stack>\n    </Box>\n  </Web.Grid.Col>\n  <Web.Grid.Col>\n    <Box padding="$sm" color="$primary1">\n      <Layout.Stack grow space={2}>\n        <IconMaterial\n          icon="health_and_safety"\n          size={24}\n          variant="filled"\n          color="#fff"\n        />\n        <IconMaterial\n          icon="health_and_safety"\n          size={24}\n          variant="outlined"\n          color="#fff"\n        />\n      </Layout.Stack>\n    </Box>\n  </Web.Grid.Col>\n</Web.Grid>\n'))),(0,r.kt)(m,{label:"Integration",mdxType:"Tab"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={Icon}\n  rows={[\n    {\n      name: 'children',\n      type: 'ReactNode',\n      description: 'The svg content of the icon',\n    },\n    {\n      name: 'color',\n      type: 'string',\n      description: 'Set the color of the icon',\n    },\n    {\n      name: 'size',\n      type: 'number | string',\n      description: 'Set the size of the icon',\n    },\n\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={IconMaterial}\n  rows={[\n    {\n      name: 'icon',\n      type: 'string',\n      description: 'Name of the material icon',\n    },\n    {\n      name: 'variant',\n      type: 'filled | outlined',\n      description: 'The style variation of the material icon.',\n    },\n    {\n      name: 'color',\n      type: 'string',\n      description: 'Set the color of the material icon',\n    },\n    {\n      name: 'size',\n      type: 'number | string',\n      description: 'Set the size of the material icon',\n    },\n\n  ]}\n/>\n"))))}f.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var o=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(t),u=a,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||i;return t?o.createElement(f,r(r({ref:n},p),{},{components:t})):o.createElement(f,r({ref:n},p))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var s=2;s<i;s++)r[s]=t[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);