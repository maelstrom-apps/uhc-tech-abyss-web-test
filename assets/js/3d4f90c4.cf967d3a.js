"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[4830],{30876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(y,s(s({ref:t},c),{},{components:r})):n.createElement(y,s({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},24641:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=r(7896),a=r(31461),o=(r(67294),r(30876)),s=["components"],i={id:"building",title:"Creating Parcels"},l=void 0,p={unversionedId:"parcels/building",id:"parcels/building",isDocsHomePage:!1,title:"Creating Parcels",description:"Stories",source:"@site/docs/parcels/2-creating-parcels.md",sourceDirName:"parcels",slug:"/parcels/building",permalink:"/parcels/building",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"building",title:"Creating Parcels"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/parcels/getting-started"},next:{title:"Builds",permalink:"/parcels/builds"}},c=[{value:"Stories",id:"stories",children:[],level:2},{value:"Custom Properties",id:"custom-properties",children:[],level:2}],u={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"stories"},"Stories"),(0,o.kt)("p",null,"Abyss utilizes ",(0,o.kt)("a",{parentName:"p",href:"https://storybook.js.org/"},"Storybook")," as a frontend workshop for building out your Parcels in isolation."),(0,o.kt)("p",null,"Every Parcel you create needs a ",(0,o.kt)("inlineCode",{parentName:"p"},".stories")," file for setup and configuration. Below is the expected structure for stories. We define stories according to the Component Story Format (CSF), an ES6 module-based standard that is easy to write and portable between tools."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"\u251c\u2500\u2500 .abyss\n|   \u251c\u2500\u2500 environments.json\n|   \u2514\u2500\u2500 settings.json\n\u251c\u2500\u2500 src\n|   \u251c\u2500\u2500 stories\n|   |   \u251c\u2500\u2500 MyParcel\n|   |   |   \u251c\u2500\u2500 index.js\n|   |   |   \u251c\u2500\u2500 MyParcel.jsx\n|   |   |   \u2514\u2500\u2500 MyParcel.stories.jsx\n\u2514\u2500\u2500 package.json\n")),(0,o.kt)("p",null,"The key ingredients are the default export that describes the component, and named exports that describe the stories. Read more about stories and their various configurations here: ",(0,o.kt)("a",{parentName:"p",href:"https://storybook.js.org/docs/react/writing-stories/introduction"},"Stories"),". Each default export requires both the ",(0,o.kt)("inlineCode",{parentName:"p"},"component")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"parcel")," prop."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"component")," property is the React component you are creating for your Parcel."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"parcel")," property is the desired name of the Parcel. It must be in kebab-case format.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"// MyParcel.stories.jsx\n\nimport React from 'react';\n\nimport { MyParcel } from './MyParcel';\n\nexport default {\n  // Title of the Story\n  title: 'MyParcel',\n  // Title of the Parcel element tag\n  parcel: 'my-parcel'\n  // Parcel React component\n  component: MyParcel,\n};\n\nconst Template = (args) => {\n  return <MyParcel {...args} />;\n};\n\nexport const Primary = Template.bind({});\n")),(0,o.kt)("p",null,"Because of the Component Story Format we are able to take the work you've done creating a Parcel component in Storybook and convert that into a reusable web component."),(0,o.kt)("h2",{id:"custom-properties"},"Custom Properties"),(0,o.kt)("p",null,"Parcels allow for the ability to pass in custom properties. We can achieve this by setting an attribute. Functions are not accepted as property values."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<abyss-parcel\n  import="my-parcel-one@2.0.0"\n  userName="John Doe"\n  id="ABC123"\n></abyss-parcel>\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"auth")," are reserved property names."),(0,o.kt)("p",null,"You can set default values for properties when developing your Parcel. You can set these default properties at a global level via the export default or on a story level with the ",(0,o.kt)("inlineCode",{parentName:"p"},"args")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"// MyParcel.stories.jsx\n\nimport React from 'react';\n\nimport { MyParcel } from './MyParcel';\n\nexport default {\n  title: 'MyParcel',\n  parcel: 'my-parcel'\n  component: MyParcel,\n  args: {\n    // All MyParcel stories will have these properties passed to them.\n    userName: \"John Doe\",\n    sampleList: ['Create', 'Build', 'Use']\n  },\n};\n\n// We create a \u201ctemplate\u201d of how args map to rendering\nconst Template = (args) => {\n  return <MyParcel {...args} />;\n};\n\n//Each story then reuses that template\nexport const Primary = Template.bind({});\n\n// You can set per story properties by targeting the template\nPrimary.args = {\n  userName: 'Jane Doe',\n};\n")))}m.isMDXComponent=!0}}]);