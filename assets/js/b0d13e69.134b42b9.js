"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[6377],{99689:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>c,default:()=>m,frontMatter:()=>p,metadata:()=>s,toc:()=>u});var i,o=t(7896),r=t(31461),a=(t(2784),t(3905)),l=["components"],p={id:"chip",category:"Data Display",title:"Chip",description:"Chips are compact elements that represent an action, input or attribute.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/Abyss-Design-System?node-id=9438%3A37669",pagination_prev:"web/ui/badge",pagination_next:"web/ui/code-highlighter"},c=void 0,s={unversionedId:"web/ui/chip",id:"web/ui/chip",isDocsHomePage:!1,title:"Chip",description:"Chips are compact elements that represent an action, input or attribute.",source:"@site/docs/web/ui/Chip.md",sourceDirName:"web/ui",slug:"/web/ui/chip",permalink:"/web/ui/chip",tags:[],version:"current",frontMatter:{id:"chip",category:"Data Display",title:"Chip",description:"Chips are compact elements that represent an action, input or attribute.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/Abyss-Design-System?node-id=9438%3A37669",pagination_prev:"web/ui/badge",pagination_next:"web/ui/code-highlighter"},sidebar:"docs",previous:{title:"Badge",permalink:"/web/ui/badge"},next:{title:"CodeHighlighter",permalink:"/web/ui/code-highlighter"}},u=[{value:"Icon",id:"icon",children:[],level:2},{value:"onClose",id:"onclose",children:[],level:2},{value:"Group",id:"group",children:[],level:2},{value:"Outline",id:"outline",children:[],level:2},{value:"Width",id:"width",children:[{value:"Decorative Icons",id:"decorative-icons",children:[],level:4}],level:2}],d=(i="Tab",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)}),h={toc:u};function m(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(d,{label:"Overview",mdxType:"Tab"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Chip } from '@abyss/web/ui/Chip';\n")),(0,a.kt)("h2",{id:"icon"},"Icon"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"icon")," prop to pass in a specific Icon component. Find further guidance on material icons in the ",(0,a.kt)("a",{parentName:"p",href:"/web/ui/icon-material"},"Material Icons Tab"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Chip\n  icon={\n    <IconMaterial icon="info" size="$sm" color="$gray8" variant="outlined" />\n  }\n  text="Chip"\n  onClose={() => {}}\n/>\n')),(0,a.kt)("h2",{id:"onclose"},"onClose"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"onClose")," function to handle the action when close button is triggered."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Chip\n  icon={\n    <IconMaterial\n      icon="star_outline"\n      size="$sm"\n      color="$gray8"\n      variant="outlined"\n    />\n  }\n  onClose={() => {}}\n  text="Chip with a close button"\n/>\n')),(0,a.kt)("h2",{id:"group"},"Group"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"Chip.Group")," to group multiple chips together. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"title")," to give the group of chips a label. ",(0,a.kt)("inlineCode",{parentName:"p"},"title")," is required."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Chip.Group title="Chip Group Example">\n  <Layout.Stack>\n    <Chip\n      icon={\n        <IconMaterial\n          icon="star_outline"\n          size="$sm"\n          color="$gray8"\n          variant="outlined"\n        />\n      }\n      onClose={() => {}}\n      text="Chip in Group"\n    />\n    <Chip\n      icon={\n        <IconMaterial\n          icon="house"\n          size="$sm"\n          color="$gray8"\n          variant="outlined"\n        />\n      }\n      onClose={() => {}}\n      text="Chip in Group"\n    />\n    <Chip\n      icon={\n        <IconMaterial\n          icon="filter"\n          size="$sm"\n          color="$gray8"\n          variant="outlined"\n        />\n      }\n      onClose={() => {}}\n      text="Chip in Group"\n    />\n  </Layout.Stack>\n</Chip.Group>\n')),(0,a.kt)("h2",{id:"outline"},"Outline"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"outline")," prop to enable or disable the border around the chip."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Layout.Group>\n  <Chip onClose={() => {}} text="Outlined Chip" outline />\n  <Chip onClose={() => {}} text="Default Chip" />\n</Layout.Group>\n')),(0,a.kt)("h2",{id:"width"},"Width"),(0,a.kt)("p",null,"Chips have a max width of 200px. Exceeding the max width will truncate the content and can be seen with a popover by clicking on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Chip"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Chip\n  icon={\n    <IconMaterial\n      icon="star_outline"\n      size="$sm"\n      color="$gray8"\n      variant="outlined"\n    />\n  }\n  onClose={() => {}}\n  text="Lorem ipsum dolor sit amet, consectetur adipiscing elit."\n/>\n'))),(0,a.kt)(d,{label:"Integration",mdxType:"Tab"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={Chip}\n  rows={[\n    {\n      name: 'children',\n      type: 'node',\n      description: 'The text to be input into the chip component',\n    },\n    {\n      name: 'outline',\n      type: 'boolean',\n      description: 'Flag to enable/disable border around chip',\n    },\n    {\n      name: 'icon',\n      type: 'node',\n      description: 'The icon to be input into the chip component',\n    },\n    {\n      name: 'onClose',\n      type: 'function',\n      description: 'Callback fired when the user activates the close button',\n    },\n    {\n      name: 'ariaCloseLabel',\n      type: 'string',\n      description: 'The text to describe the action of the close button',\n    },\n  ]}\n/>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={Chip.Group}\n  rows={[\n    {\n      name: 'children',\n      type: 'node',\n      description: 'Chip components',\n    },\n    {\n      name: 'title',\n      type: 'string',\n      description: 'Title of chip group',\n    },\n  ]}\n/>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={Chip}\n  rows={[\n    {\n      name: 'chip-root',\n      description: 'chip root element',\n    },\n    {\n      name: 'chip-icon',\n      description: 'chip icon container',\n    },\n    {\n      name: 'chip-close-button',\n      description: 'chip close button element',\n    },\n    {\n      name: 'chip-close-button-icon',\n      description: 'chip close icon element',\n    },\n    {\n      name: 'chip-popover',\n      description: 'chip popover element',\n    },\n  ]}\n/>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={Chip.Group}\n  rows={[\n    {\n      name: 'chip-group',\n      description: 'chip group root element',\n    },\n  ]}\n/>\n"))),(0,a.kt)(d,{label:"Accessibility",mdxType:"Tab"},"Chips are focusable, and truncated with an ellipsis at 200px. Once a chip has been removed, it cannot be re-rendered. These are primarily used for Select List Multi, and Data Table filter.",(0,a.kt)("h4",{id:"decorative-icons"},"Decorative Icons"),(0,a.kt)("p",null,"In the chip below, since there is sufficient text next to the icon, the icon is considered decorative and and does not need to be exposed to assistive technology. Find further guidance on material icons in the ",(0,a.kt)("a",{parentName:"p",href:"/web/ui/icon-material"},"Material Icons Tab"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Chip\n  icon={\n    <IconMaterial\n      icon="star_outline"\n      size="$sm"\n      color="$gray8"\n      variant="outlined"\n    />\n  }\n  onClose={() => {}}\n  text="Chip"\n/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.AccessibilityTable\n  rows={[\n    {\n      name: 'Space',\n      description: \"Activates the chip's popover or close button\",\n    },\n    {\n      name: 'Enter',\n      description: \"Activates the chip's popover or close button\",\n    },\n    {\n      name: 'Tab',\n      description: 'Changes focus to the next element in chip',\n    },\n    {\n      name: 'Alt + Tab',\n      description: 'Changes focus to the previous element in chip',\n    },\n  ]}\n/>\n"))))}m.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>h});var i=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=i.createContext({}),c=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return i.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),h=o,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||r;return t?i.createElement(m,a(a({ref:n},s),{},{components:t})):i.createElement(m,a({ref:n},s))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<r;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);