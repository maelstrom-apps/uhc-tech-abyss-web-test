"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[3756],{30876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,y=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(y,o(o({ref:t},c),{},{components:r})):n.createElement(y,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},18818:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>u,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=r(7896),a=r(31461),i=(r(67294),r(30876)),o=["components"],s={id:"use-media-query",category:"UI & DOM",title:"useMediaQuery",description:"Subscribe to media queries with window.matchMedia",pagination_prev:"web/hooks/use-collapse",pagination_next:"web/hooks/use-countdown"},u=void 0,l={unversionedId:"web/hooks/use-media-query",id:"web/hooks/use-media-query",isDocsHomePage:!1,title:"useMediaQuery",description:"Subscribe to media queries with window.matchMedia",source:"@site/docs/web/hooks/useMediaQuery.md",sourceDirName:"web/hooks",slug:"/web/hooks/use-media-query",permalink:"/web/hooks/use-media-query",tags:[],version:"current",frontMatter:{id:"use-media-query",category:"UI & DOM",title:"useMediaQuery",description:"Subscribe to media queries with window.matchMedia",pagination_prev:"web/hooks/use-collapse",pagination_next:"web/hooks/use-countdown"},sidebar:"docs",previous:{title:"useCollapse",permalink:"/web/hooks/use-collapse"},next:{title:"useCountdown",permalink:"/web/hooks/use-countdown"}},c=[{value:"Usage",id:"usage",children:[],level:2},{value:"Server Side Rendering",id:"server-side-rendering",children:[],level:2},{value:"Properties",id:"properties",children:[],level:2}],p={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useMediaQuery } from '@abyss/web/hooks/useMediaQuery';\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"useMediaQuery")," hook leverages the window.matchMedia() API and will return false if api is not available unless initial value is provided in the second argument."),(0,i.kt)("p",null,"Resize browser window to trigger window.matchMedia event:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const matches = useMediaQuery('(min-width: 900px)');\n\n  return (\n    <Badge variant={matches ? 'success' : 'info'}>\n      Breakpoint {matches ? 'matches' : 'does not match'}\n    </Badge>\n  );\n};\n")),(0,i.kt)("h2",{id:"server-side-rendering"},"Server Side Rendering"),(0,i.kt)("p",null,"If you are using server side rendering the ",(0,i.kt)("inlineCode",{parentName:"p"},"useMediaQuery")," hook will always return false as the window.matchMedia api is not available. To overcome this, you can override the initial value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const matches = useMediaQuery('(max-width: 700px)', true, {\n  getInitialValueInEffect: false,\n});\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"useMediaQuery(\n  query: string,\n  initialValue?: boolean,\n  options?: {\n    getInitialValueInEffect: boolean;\n  }\n): boolean;\n")))}d.isMDXComponent=!0}}]);