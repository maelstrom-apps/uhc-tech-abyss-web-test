"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[652],{30876:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>b});var i=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,i,a=function(n,e){if(null==n)return{};var t,i,a={},r=Object.keys(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var s=i.createContext({}),u=function(n){var e=i.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},p=function(n){var e=u(n.components);return i.createElement(s.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},c=i.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,s=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),c=u(t),b=a,m=c["".concat(s,".").concat(b)]||c[b]||d[b]||r;return t?i.createElement(m,o(o({ref:e},p),{},{components:t})):i.createElement(m,o({ref:e},p))}));function b(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,o=new Array(r);o[0]=c;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l.mdxType="string"==typeof n?n:a,o[1]=l;for(var u=2;u<r;u++)o[u]=t[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},59704:(n,e,t)=>{t.r(e),t.d(e,{contentTitle:()=>u,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var i,a=t(7896),r=t(31461),o=(t(67294),t(30876)),l=["components"],s={id:"sub-navigation-menu",category:"Navigation",title:"SubNavigationMenu",description:"Used to display a navigation menu with links and dropdowns.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/branch/4Q8dpPXNmDfnRP0aFxlMyV/Abyss-Design-System?node-id=12040%3A49421",pagination_prev:"web/ui/router",pagination_next:"web/ui/drawer"},u=void 0,p={unversionedId:"web/ui/sub-navigation-menu",id:"web/ui/sub-navigation-menu",isDocsHomePage:!1,title:"SubNavigationMenu",description:"Used to display a navigation menu with links and dropdowns.",source:"@site/docs/web/ui/SubNavigationMenu.md",sourceDirName:"web/ui",slug:"/web/ui/sub-navigation-menu",permalink:"/web/ui/sub-navigation-menu",tags:[],version:"current",frontMatter:{id:"sub-navigation-menu",category:"Navigation",title:"SubNavigationMenu",description:"Used to display a navigation menu with links and dropdowns.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/branch/4Q8dpPXNmDfnRP0aFxlMyV/Abyss-Design-System?node-id=12040%3A49421",pagination_prev:"web/ui/router",pagination_next:"web/ui/drawer"},sidebar:"docs",previous:{title:"Router",permalink:"/web/ui/router"},next:{title:"Drawer",permalink:"/web/ui/drawer"}},d=[{value:"Usage",id:"usage",children:[],level:2},{value:"Scroll",id:"scroll",children:[],level:2},{value:"Title",id:"title",children:[],level:2},{value:"SubText",id:"subtext",children:[],level:2},{value:"HeadingLevel",id:"headinglevel",children:[],level:2},{value:"Width",id:"width",children:[],level:2},{value:"Height",id:"height",children:[],level:2},{value:"NavItems",id:"navitems",children:[],level:2},{value:"Variant",id:"variant",children:[],level:2},{value:"Position",id:"position",children:[{value:"Right",id:"right",children:[],level:3},{value:"Left",id:"left",children:[],level:3}],level:2}],c=(i="Tab",function(n){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)}),b={toc:d};function m(n){var e=n.components,t=(0,r.Z)(n,l);return(0,o.kt)("wrapper",(0,a.Z)({},b,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(c,{label:"Overview",mdxType:"Tab"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { SubNavigationMenu } from '@abyss/web/ui/SubNavigationMenu';\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Utilize SubNavigationMenu to create a navigation menu on the side of your web page."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Button',\n      onClick: () => {\n        console.log('clicked button');\n      },\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown Item',\n      isDisabled: false,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown Item Link',\n      isDisabled: false,\n      href: '#',\n      isOpenByDefault: true,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown Item Button',\n      isDisabled: false,\n      onClick: () => {\n        console.log('clicked button');\n      },\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown Item Disabled',\n      isDisabled: true,\n      href: '#',\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n      before: <IconMaterial icon=\"info\" size={16} />,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n  ];\n  return (\n    <SubNavigationMenu\n      title={title}\n      subText={subText}\n      navItems={navItems}\n      position=\"right\"\n    />\n  );\n};\n")),(0,o.kt)("h2",{id:"scroll"},"Scroll"),(0,o.kt)("p",null,"When the Menu has overflow it will begin to scroll."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: false,\n      isOpenByDefault: true,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: false,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: true,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n      before: <IconMaterial icon=\"info\" size={16} />,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n  ];\n  return (\n    <SubNavigationMenu\n      title={title}\n      subText={subText}\n      navItems={navItems}\n      position=\"right\"\n      height=\"250px\"\n    />\n  );\n};\n")),(0,o.kt)("h2",{id:"title"},"Title"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"title")," prop to pass in a title for the Menu."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n  ];\n  return (\n    <Layout.Group space={500} alignItems=\"top\">\n      <SubNavigationMenu title={title} navItems={navItems} position=\"right\" />\n    </Layout.Group>\n  );\n};\n")),(0,o.kt)("h2",{id:"subtext"},"SubText"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"subText")," prop to pass in a description for the Menu."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n  ];\n  return (\n    <SubNavigationMenu\n      title={title}\n      subText={subText}\n      navItems={navItems}\n      position=\"right\"\n    />\n  );\n};\n")),(0,o.kt)("h2",{id:"headinglevel"},"HeadingLevel"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"headingLevel")," prop to pass in a specified headingLevel for the title. The default is ",(0,o.kt)("inlineCode",{parentName:"p"},"h3"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n  ];\n  return (\n    <SubNavigationMenu\n      title={title}\n      subText={subText}\n      navItems={navItems}\n      headingLevel=\"h4\"\n      position=\"right\"\n    />\n  );\n};\n")),(0,o.kt)("h2",{id:"width"},"Width"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"width")," prop to set the width of the menu. Defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"320px"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n  ];\n  return (\n    <SubNavigationMenu\n      title={title}\n      subText={subText}\n      navItems={navItems}\n      headingLevel=\"h4\"\n      position=\"right\"\n      width=\"450px\"\n    />\n  );\n};\n")),(0,o.kt)("h2",{id:"height"},"Height"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," prop to set the height of the menu. Defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"100%"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n  ];\n  return (\n    <SubNavigationMenu\n      title={title}\n      subText={subText}\n      navItems={navItems}\n      headingLevel=\"h4\"\n      position=\"right\"\n      height=\"250px\"\n    />\n  );\n};\n")),(0,o.kt)("h2",{id:"navitems"},"NavItems"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"navItems")," prop to specify what is displayed in the SubNavigationMenu. The prop requires an array of objects that have the form:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"navItems: [\n  {\n    title: 'string',\n    href: 'string',\n    isDisabled: 'boolean',\n    before: 'node',\n    after: 'node',\n    onClick: 'func',\n    openNewWindow: 'boolean',\n    subNavItems: 'array[object]',\n    isOpenByDefault: 'boolean',\n  },\n];\n")),(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"navItems")," can have either an ",(0,o.kt)("inlineCode",{parentName:"li"},"href")," or a subset of NavItems in ",(0,o.kt)("inlineCode",{parentName:"li"},"subNavItems"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"navItems")," also takes ",(0,o.kt)("inlineCode",{parentName:"li"},"openNewWindow"),", which will open a new window when the link is clicked. If a non-relative path (like ",(0,o.kt)("a",{parentName:"li",href:"https://google.com"},"https://google.com"),") is passed, then openNewWindow will be ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," by default; otherwise, it will be ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," by default."),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"subNavItems")," is specified, then the object will be recognized as a dropdown. You can utilize ",(0,o.kt)("inlineCode",{parentName:"li"},"isOpenByDefault")," to specify if the dropdown starts out open or closed (",(0,o.kt)("inlineCode",{parentName:"li"},"isOpenByDefault")," is set to ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," by default)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"before")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"after")," can be used to place icons or nodes before or after the menu item.")),(0,o.kt)("h2",{id:"variant"},"Variant"),(0,o.kt)("p",null,"Pass in the ",(0,o.kt)("inlineCode",{parentName:"p"},"variant"),' "sideBarMenu" to turn your SubNavigationMenu into a side bar menu that lists out all available links.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const sideBarTitle = 'Sidebar Menu';\n\n  const sideBarMenuItems = [\n    {\n      title: 'Dropdown link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown link',\n      href: '#',\n    },\n  ];\n\n  return (\n    <SubNavigationMenu\n      title={sideBarTitle}\n      navItems={sideBarMenuItems}\n      position=\"right\"\n      variant=\"sideBarMenu\"\n      width=\"200px\"\n    />\n  );\n};\n")),(0,o.kt)("h2",{id:"position"},"Position"),(0,o.kt)("p",null,"Set the ",(0,o.kt)("inlineCode",{parentName:"p"},"position")," prop to ",(0,o.kt)("inlineCode",{parentName:"p"},"right")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"left")," change the side that the vertical line appears on. ",(0,o.kt)("inlineCode",{parentName:"p"},"position")," is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"right")," by default"),(0,o.kt)("h3",{id:"right"},"Right"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: false,\n      isOpenByDefault: true,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: false,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: true,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n      before: <IconMaterial icon=\"info\" size={16} />,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n  ];\n  return (\n    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n      <SubNavigationMenu\n        title={title}\n        subText={subText}\n        navItems={navItems}\n        position=\"right\"\n      />\n    </div>\n  );\n};\n")),(0,o.kt)("h3",{id:"left"},"Left"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const title = 'Menu';\n  const subText = 'Sub menu text';\n\n  const navItems = [\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: false,\n      openNewWindow: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '/web/ui/button',\n      isDisabled: true,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: false,\n      isOpenByDefault: true,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: false,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Dropdown item',\n      isDisabled: true,\n      subItems: [\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n        {\n          title: 'Dropdown Link',\n          href: '#',\n        },\n      ],\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n    },\n    {\n      title: 'Menu Link',\n      href: '#',\n      before: <IconMaterial icon=\"info\" size={16} />,\n      after: <IconMaterial icon=\"warning\" size={16} />,\n    },\n  ];\n  return (\n    <SubNavigationMenu\n      title={title}\n      subText={subText}\n      navItems={navItems}\n      position=\"left\"\n    />\n  );\n};\n"))),(0,o.kt)(c,{label:"Integration",mdxType:"Tab"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={SubNavigationMenu}\n  rows={[\n    {\n      name: 'title',\n      type: 'string',\n      description: 'Title of the SubNavigrationMenu',\n    },\n    {\n      name: 'subText',\n      type: 'string',\n      description: 'Description of the SubNavigationMenu',\n    },\n    {\n      name: 'onClick',\n      type: 'function',\n      description: 'Callback fired when the dropdown is clicked',\n    },\n    {\n      name: 'navItems',\n      type: 'array[object]',\n      description:\n        'Array of menu items. { title: string, isDisabled: boolean, href: string, before: node, after: node, isOpenByDefault: boolean, subItems: array[object], openNewWindow: boolean, onClick: function}',\n    },\n    {\n      name: 'position',\n      type: 'left | right',\n      description: 'Positions nav on the left or right side',\n    },\n    {\n      name: 'width',\n      type: ' string | number',\n      description: 'changes the width of the menu. Defaults to 320px',\n    },\n    {\n      name: 'height',\n      type: 'string | number',\n      description: 'changes the height of the menu. Defaults to 100%',\n    },\n    {\n      name: 'variant',\n      type: 'default | sideBarMenu',\n      description: 'changes SubNavigationMenu into a sideBarMenu',\n    },\n    {\n      name: 'headingLevel',\n      type: 'h1 | h2 | h3 | h4 | h5 | h6',\n      description: 'changes the heading level of the title. defaults to h3',\n    },\n  ]}\n/>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={SubNavigationMenu}\n  rows={[\n    {\n      name: 'sub-navigation-menu-root',\n      description: 'root element',\n    },\n    {\n      name: 'sub-navigation-header-container',\n      description: 'Header container',\n    },\n    {\n      name: 'sub-navigation-header-title',\n      description: 'Header title',\n    },\n    {\n      name: 'sub-navigation-header-text',\n      description: 'Header subText',\n    },\n    {\n      name: 'sub-navigation-menu-items',\n      description: 'Menu items unordered list',\n    },\n    {\n      name: 'sub-navigation-menu-item',\n      description: 'Menu List item',\n    },\n    {\n      name: 'sub-navigation-menu-link',\n      description: 'Menu Link',\n    },\n    {\n      name: 'sub-navigation-dropdown-button',\n      description: 'Dropdown button',\n    },\n    {\n      name: 'sub-navigation-dropdown-container',\n      description: 'Dropdown container',\n    },\n    {\n      name: 'sub-navigation-dropdown-wrapper',\n      description: 'Dropdown wrapping title and button',\n    },\n    {\n      name: 'sub-navigation-dropdown-button-chevron',\n      description: 'Button Chevron',\n    },\n    {\n      name: 'sub-navigation-dropdown-title',\n      description: 'Dropdown title/link',\n    },\n    {\n      name: 'sub-navigation-dropdown-list-container',\n      description: 'Dropdown links container',\n    },\n  ]}\n/>\n"))),(0,o.kt)(c,{label:"Accessibility",mdxType:"Tab"},(0,o.kt)("p",null,"For icon accessibility please refer to ",(0,o.kt)("a",{parentName:"p",href:"/web/ui/icon-material"},"Icon Material"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.AccessibilityTable\n  rows={[\n    {\n      name: 'Tab',\n      description: 'Traverse the SubNavMenu',\n    },\n    {\n      name: 'Enter',\n      description:\n        'Select a SubNavMenu item. When hitting Enter on a dropdown, it will open/close the dropdown.',\n    },\n  ]}\n/>\n"))))}m.isMDXComponent=!0}}]);