"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[1482],{30876:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),c=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,b=p["".concat(i,".").concat(m)]||p[m]||u[m]||a;return t?o.createElement(b,s(s({ref:n},d),{},{components:t})):o.createElement(b,s({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=p;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<a;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},34642:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var o=t(7896),r=t(31461),a=(t(67294),t(30876)),s=["components"],l={id:"style-customization",title:"Style Customization",description:"Guide to override CSS styles for Abyss components.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/Abyss-Design-System?node-id=0%3A1"},i=void 0,c={unversionedId:"developers/style-customization",id:"developers/style-customization",isDocsHomePage:!1,title:"Style Customization",description:"Guide to override CSS styles for Abyss components.",source:"@site/docs/developers/style-customization.md",sourceDirName:"developers",slug:"/developers/style-customization",permalink:"/developers/style-customization",tags:[],version:"current",frontMatter:{id:"style-customization",title:"Style Customization",description:"Guide to override CSS styles for Abyss components.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/Abyss-Design-System?node-id=0%3A1"},sidebar:"docs",previous:{title:"Documentation Guide",permalink:"/developers/documentation-guide"},next:{title:"Component Testing",permalink:"/developers/component-testing"}},d=[{value:"Overview",id:"overview",children:[],level:2},{value:"CSS Prop Overrides",id:"css-prop-overrides",children:[{value:"Slider Example",id:"slider-example",children:[],level:3},{value:"Button Example",id:"button-example",children:[],level:3}],level:2},{value:"Global Theme Configuration",id:"global-theme-configuration",children:[],level:2},{value:"Static Class Names",id:"static-class-names",children:[],level:2}],u={toc:d};function p(e){var n=e.components,t=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Every Abyss component supports style customization using class names. Customization should be kept at a minimum, as the Abyss components are set to create a standard across all UHG affiliated products."),(0,a.kt)("h2",{id:"css-prop-overrides"},"CSS Prop Overrides"),(0,a.kt)("p",null,"To apply your styles to any component, go to the ",(0,a.kt)("strong",{parentName:"p"},"Integration")," tab under component documentation and find the classes table. The class name column will tell you how to target specific elements in any component."),(0,a.kt)("h3",{id:"slider-example"},"Slider Example"),(0,a.kt)("p",null,"Here you have a default ",(0,a.kt)("inlineCode",{parentName:"p"},"Slider")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const [value, setValue] = React.useState(25);\n\n  return (\n    <>\n      <Slider\n        label="Default Slider"\n        value={value}\n        onChange={(e) => setValue(e)}\n      />\n    </>\n  );\n};\n')),(0,a.kt)("br",null),(0,a.kt)("p",null,"If you want to customize ",(0,a.kt)("inlineCode",{parentName:"p"},"Slider")," component you can target specific class names to change the styles. Please visit the ",(0,a.kt)("a",{parentName:"p",href:"/web/ui/slider"},"accessibility")," tab in the component documentation page to read more on designing an accessible ",(0,a.kt)("inlineCode",{parentName:"p"},"Slider")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={Slider}\n  rows={[\n    {\n      name: 'slider-root',\n      description: 'Slider root element',\n    },\n    {\n      name: 'slider-label',\n      description: 'Label',\n    },\n    {\n      name: 'slider-thumb',\n      description: 'Slider thumb',\n    },\n    {\n      name: 'slider-thumb-popover',\n      description: 'Slider thumb popover',\n    },\n    {\n      name: 'slider-track-wrapper',\n      description: 'Track wrapper',\n    },\n    {\n      name: 'slider-track',\n      description: 'Track',\n    },\n    {\n      name: 'slider-track-filler',\n      description: 'Track filler',\n    },\n    {\n      name: 'slider-track-marks',\n      description: 'Marks on track',\n    },\n    {\n      name: 'slider-track-mark-text',\n      description: 'Text at each mark',\n    },\n    {\n      name: 'slider-descriptor',\n      description: 'Descriptor for FormInput',\n    },\n  ]}\n/>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"<Slider\n  label=\"Custom Slider\"\n  css={{\n    // Add styles to slider label.\n    'abyss-slider-label': {\n      color: '#FF612B',\n    },\n    // Add styles to slider track filler.\n    'abyss-slider-track-filler': {\n      backgroundColor: '#FF612B',\n    },\n    // Add styles to slider thumb.\n    'abyss-slider-thumb': {\n      'border-color': '#FF612B',\n    },\n    // Add styles to slider thumb popover.\n    'abyss-slider-thumb-popover': {\n      backgroundColor: '#FF612B',\n    },\n  }}\n/>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const [value, setValue] = React.useState(25);\n\n  return (\n    <>\n      <Slider\n        label=\"Custom Slider\"\n        css={{\n          'abyss-slider-label': {\n            color: '#FF612B',\n          },\n          'abyss-slider-track-filler': {\n            backgroundColor: '#FF612B',\n          },\n          'abyss-slider-thumb': {\n            'border-color': '#FF612B',\n          },\n          'abyss-slider-thumb-popover': {\n            backgroundColor: '#FF612B',\n          },\n        }}\n        value={value}\n        onChange={(e) => setValue(e)}\n      />\n    </>\n  );\n};\n")),(0,a.kt)("h3",{id:"button-example"},"Button Example"),(0,a.kt)("p",null,"Here you have a default ",(0,a.kt)("inlineCode",{parentName:"p"},"Button")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Layout.Group>\n  <Button>Primary Button</Button>\n  <Button variant="outline">Secondary Button</Button>\n</Layout.Group>\n')),(0,a.kt)("br",null),(0,a.kt)("p",null,"Similarly, to customize ",(0,a.kt)("inlineCode",{parentName:"p"},"Button")," component, you can target specific class names to change the styles. The ",(0,a.kt)("inlineCode",{parentName:"p"},"Button")," component should maintain a 3:1 color contrast ratio. Please visit the ",(0,a.kt)("a",{parentName:"p",href:"/web/ui/button"},"accessibility")," tab in the component documentation page to read more on designing an accessible ",(0,a.kt)("inlineCode",{parentName:"p"},"Button")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={Button}\n  rows={[\n    {\n      name: 'button-root',\n      description: 'Button root element',\n    },\n    {\n      name: 'button-link',\n      description: 'Link element',\n    },\n  ]}\n/>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// Add styles to button.\n<Button css={{ 'abyss-button-root': backgroundColor: '#d9f6fa' }} />\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Layout.Group>\n  <Button\n    css={{\n      'abyss-button-root': {\n        backgroundColor: '#A82A00',\n        borderColor: '#A82A00',\n        color: '#FFFFFF',\n\n        '&:hover': {\n          backgroundColor: '#DB3700',\n          borderColor: '#DB3700',\n        },\n      },\n    }}\n  >\n    Custom Button\n  </Button>\n  <Button\n    variant=\"outline\"\n    css={{\n      'abyss-button-root': {\n        backgroundColor: '#d9f6fa',\n        borderColor: '#d9f6fa',\n        color: '#002677',\n\n        '&:hover': {\n          backgroundColor: '#d9f6fa',\n          borderColor: '#d9f6fa',\n          'box-shadow': '1px 1px 1px #dadbdc',\n        },\n      },\n    }}\n  >\n    Custom Button\n  </Button>\n</Layout.Group>\n")),(0,a.kt)("h2",{id:"global-theme-configuration"},"Global Theme Configuration"),(0,a.kt)("p",null,"The root colors and theme settings are included in the tokens, and can be accessed anywhere styleProps are loaded."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},'() => {\n  const theme = useAbyssTheme();\n  return (\n    <CodeHighlighter code={JSON.stringify(theme, null, 2)} language="json" />\n  );\n};\n')),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"static-class-names"},"Static Class Names"),(0,a.kt)("p",null,"Apart from class names, each component also has static classes on each element. You can use them to apply your style sheets if you do not use css modules."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},'<CodeHighlighter\n  code={`.abyss-box-root {\n  color: lightblue;\n  background-color: verdana;\n  border: 3px solid red;\n  box-shadow: 2px 2px 7px 1px grey;\n}\n\n.abyss-text-input-label {\n  color: white;\n  text-align: center;\n}`}\n  language="css"\n/>\n')))}p.isMDXComponent=!0}}]);