"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[599],{30876:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=u(t),d=o,h=c["".concat(s,".").concat(d)]||c[d]||p[d]||a;return t?i.createElement(h,r(r({ref:n},m),{},{components:t})):i.createElement(h,r({ref:n},m))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<a;u++)r[u]=t[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},89829:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>u,default:()=>h,frontMatter:()=>s,metadata:()=>m,toc:()=>p});var i,o=t(7896),a=t(31461),r=(t(67294),t(30876)),l=["components"],s={id:"nav-menu",category:"Navigation",title:"NavMenu",description:"Used to display a navigation menu with links and dropdowns.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/Abyss-Design-System?node-id=0%3A1557",pagination_prev:"web/ui/link",pagination_next:"web/ui/pagination"},u=void 0,m={unversionedId:"web/ui/nav-menu",id:"web/ui/nav-menu",isDocsHomePage:!1,title:"NavMenu",description:"Used to display a navigation menu with links and dropdowns.",source:"@site/docs/web/ui/NavMenu.md",sourceDirName:"web/ui",slug:"/web/ui/nav-menu",permalink:"/web/ui/nav-menu",tags:[],version:"current",frontMatter:{id:"nav-menu",category:"Navigation",title:"NavMenu",description:"Used to display a navigation menu with links and dropdowns.",design:"https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/Abyss-Design-System?node-id=0%3A1557",pagination_prev:"web/ui/link",pagination_next:"web/ui/pagination"},sidebar:"docs",previous:{title:"Link",permalink:"/web/ui/link"},next:{title:"Pagination",permalink:"/web/ui/pagination"}},p=[{value:"Usage",id:"usage",children:[],level:2},{value:"Items",id:"items",children:[{value:"NavMenu.Columns",id:"navmenucolumns",children:[],level:3},{value:"NavMenu.Column",id:"navmenucolumn",children:[],level:3},{value:"NavMenu.Item",id:"navmenuitem",children:[],level:3},{value:"Example with Helper Components",id:"example-with-helper-components",children:[],level:3},{value:"Custom Rendering",id:"custom-rendering",children:[],level:3}],level:2},{value:"Variant",id:"variant",children:[],level:2},{value:"Position",id:"position",children:[],level:2},{value:"Max NavMenu Width",id:"max-navmenu-width",children:[],level:2},{value:"PageHeader Component",id:"pageheader-component",children:[],level:2},{value:"Disabled NavMenu.Item",id:"disabled-navmenuitem",children:[],level:2}],c=(i="Tab",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),d={toc:p};function h(e){var n=e.components,t=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(c,{label:"Overview",mdxType:"Tab"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { NavMenu } from '@abyss/web/ui/NavMenu';\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const navMenuItems = [\n    { title: \'Sample Link\', href: \'#\' },\n    {\n      title: \'Sample onClick\',\n      onClick: () => console.log(\'Sample onClick clicked\'),\n    },\n    {\n      title: \'Dropdown Menu\',\n      content: (\n        <NavMenu.Columns>\n          <NavMenu.Column\n            title="Section Title"\n            href="/developers/getting-started"\n          >\n            <NavMenu.Item\n              title="HELLO"\n              href="#"\n              description="CSS-in-JS with best-in-class developer experience."\n            />\n            <NavMenu.Item\n              title="GOODBYE"\n              href="#"\n              description="Description goes here"\n            />\n          </NavMenu.Column>\n          <NavMenu.Column>\n            <NavMenu.Item\n              title="Sample onClick"\n              onClick={() => console.log(\'onClick pressed\')}\n              description="A message will be logged to the console when this is clicked."\n            />\n          </NavMenu.Column>\n          <NavMenu.Column title="Other Section Title">\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n          </NavMenu.Column>\n        </NavMenu.Columns>\n      ),\n    },\n  ];\n  return <NavMenu items={navMenuItems} />;\n};\n')),(0,r.kt)("h2",{id:"items"},"Items"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," prop to specify what will be displayed in the NavMenu. The prop requires an array of objects that have the form:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  title: node,\n  href: string,\n  onClick: function,\n  content: node,\n}\n")),(0,r.kt)("br",null),(0,r.kt)("p",null,"Each object should have ",(0,r.kt)("strong",{parentName:"p"},"one")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"href"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"onClick"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"content")," - if the object has a value for ",(0,r.kt)("inlineCode",{parentName:"p"},"href")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"onClick"),", then in the menu it will be a link to that page, or a button, respectively; if, instead, it has ",(0,r.kt)("inlineCode",{parentName:"p"},"content")," present, in the menu it will be a dropdown menu that, when opened, will display the objects inside ",(0,r.kt)("inlineCode",{parentName:"p"},"content"),"."),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"content"),", you can pass in your own ",(0,r.kt)("a",{parentName:"p",href:"#custom-rendering"},"custom elements to render"),", but we strongly recommend that you use our ",(0,r.kt)("a",{parentName:"p",href:"#navmenucolumns"},"NavMenu.Columns"),", ",(0,r.kt)("a",{parentName:"p",href:"#navmenucolumn"},"NavMenu.Column"),", and ",(0,r.kt)("a",{parentName:"p",href:"#navmenuitem"},"NavMenu.Item")," components for two reasons:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The styling and formatting are taken care of already by the components."),(0,r.kt)("li",{parentName:"ul"},"When the screen size is small enough (ex. on phones), the columns in the dropdown menu will stack and become one vertical column that is fully scrollable.")),(0,r.kt)("p",null,"If you use custom rendering, you will have to handle both of the above aspects yourself. Details for both methods can be found below:"),(0,r.kt)("h3",{id:"navmenucolumns"},"NavMenu.Columns"),(0,r.kt)("p",null,"This component should be the outermost component of what is passed into ",(0,r.kt)("inlineCode",{parentName:"p"},"content"),". It is used to provide styling for the dropdown container and the columns that go inside it. It does not require any additional props."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const items = [\n  {\n    title: 'Dropdown menu',\n    content: (\n      <NavMenu.Columns>Your NavMenu.Column components go here</NavMenu.Columns>\n    ),\n  },\n];\n\nreturn <NavMenu items={items} />;\n")),(0,r.kt)("h3",{id:"navmenucolumn"},"NavMenu.Column"),(0,r.kt)("p",null,"This component should be a child of ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Columns"),". Each column that is a child of ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Columns")," will be a distinct column in the dropdown menu. Pass in a value for the ",(0,r.kt)("inlineCode",{parentName:"p"},"title")," prop if you would like a bolded title to appear at the top of the column. ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Column")," can also accept an ",(0,r.kt)("inlineCode",{parentName:"p"},"href")," prop for where the link will redirect to when clicked, or an ",(0,r.kt)("inlineCode",{parentName:"p"},"onClick")," prop for a function that will be called when clicked. The children of this component will be displayed vertically; you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Item")," as children to auto-format and style your input, or pass in your own custom renders to be displayed within the column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const items = [\n  {\n    title: \'Dropdown menu\',\n    content: (\n      <NavMenu.Columns>\n        <NavMenu.Column title="Column Header">\n          Put NavMenu.Item components or custom rendering here\n        </NavMenu.Column>\n        <NavMenu.Column\n          title="Column Header Link"\n          href="/developers/getting-started"\n        >\n          Put NavMenu.Item components or custom rendering here\n        </NavMenu.Column>\n        <NavMenu.Column\n          title="Column Header Button"\n          onClick={() => {\n            console.log(\'clicked\');\n          }}\n        >\n          Put NavMenu.Item components or custom rendering here\n        </NavMenu.Column>\n      </NavMenu.Columns>\n    ),\n  },\n];\n\nreturn <NavMenu items={items} />;\n')),(0,r.kt)("h3",{id:"navmenuitem"},"NavMenu.Item"),(0,r.kt)("p",null,"This component should be a child of ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Column"),". Use this component to automatically style links in your dropdown that only have a title, description, and redirect link. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"title")," prop for the title of the item, the ",(0,r.kt)("inlineCode",{parentName:"p"},"description")," prop for the description, the ",(0,r.kt)("inlineCode",{parentName:"p"},"href")," prop for where the link will redirect to when clicked, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"onClick")," prop for a function that will be called when clicked."),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"href")," points to an external link, an icon will appear next to the title to signify that it will open in a new window."),(0,r.kt)("p",null,"NOTE: each ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Item")," should have ",(0,r.kt)("strong",{parentName:"p"},"one")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"href")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"onClick"),", but not both."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const items = [\n  {\n    title: \'Dropdown menu\',\n    content: (\n      <NavMenu.Columns>\n        <NavMenu.Column>\n          <NavMenu.Item\n            title="Sample NavMenu.Item"\n            description="Your description goes here"\n            href="Your redirect link goes here"\n            onClick={() => {\n              \'Your onClick function goes here\';\n            }}\n          />\n          Put more NavMenu.Item components or custom rendering here\n        </NavMenu.Column>\n        Put more columns here\n      </NavMenu.Columns>\n    ),\n  },\n];\n\nreturn <NavMenu items={items} />;\n')),(0,r.kt)("h3",{id:"example-with-helper-components"},"Example with Helper Components"),(0,r.kt)("p",null,"This is an example of how combining the helper components leads to a well-formatted dropdown menu:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const items = [\n    {\n      title: \'Example using Helper Components\',\n      content: (\n        <NavMenu.Columns>\n          <NavMenu.Column title="NavMenu.Column Title Prop">\n            <NavMenu.Item\n              title="NavMenu.Item title prop"\n              description="This is the NavMenu.Item description prop"\n              href="#"\n            />\n            <NavMenu.Item\n              title="Sample onClick"\n              onClick={() => console.log(\'onClick pressed\')}\n              description="A message will be logged to the console when this is clicked."\n            />\n          </NavMenu.Column>\n          <NavMenu.Column>\n            <NavMenu.Item\n              title="Column w/o title passed"\n              description="This column\'s NavMenu.Column has no value for the title prop."\n              href="#"\n            />\n            <NavMenu.Item\n              title="Open in new window"\n              description="Since this will redirect to an external location, clicking this link will open it in a new window."\n              href="https://abyss.uhc.com/"\n            />\n            <NavMenu.Item\n              title="Try shinking the screen until the header\'s search bar disappears"\n              description="When the screen size is too small, the columns will combine into one."\n              href="#"\n            />\n          </NavMenu.Column>\n          <NavMenu.Column title="Column 3 Title">\n            <NavMenu.Item\n              title="See the divider to the left"\n              description="When a column has a title (and it is not the first column), a vertical divider will appear between the previous column and this one."\n              href="#"\n            />\n          </NavMenu.Column>\n        </NavMenu.Columns>\n      ),\n    },\n  ];\n  return (\n    <NavMenu\n      items={items}\n      css={{ \'abyss-nav-menu-container\': { zIndex: 205 } }}\n    />\n  );\n};\n')),(0,r.kt)("h3",{id:"custom-rendering"},"Custom Rendering"),(0,r.kt)("p",null,"To render custom components at the base level, simply pass whatever you want to render in the ",(0,r.kt)("inlineCode",{parentName:"p"},"content")," field within ",(0,r.kt)("inlineCode",{parentName:"p"},"items"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const items = [\n    {\n      title: 'Full Custom Rendering Example',\n      content: (\n        <Layout.Stack space={25}>\n          <IconMaterial icon=\"info\" size=\"150\" />\n          <Text>Custom rendering example</Text>\n        </Layout.Stack>\n      ),\n    },\n  ];\n  return (\n    <NavMenu\n      items={items}\n      css={{ 'abyss-nav-menu-container': { zIndex: 204 } }}\n    />\n  );\n};\n")),(0,r.kt)("br",null),(0,r.kt)("p",null,"You can also render custom components within ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Column"),", if you need to display something that doesn't fit the ",(0,r.kt)("inlineCode",{parentName:"p"},"NavMenu.Item")," props:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const items = [\n    {\n      title: \'Example using Helper Components\',\n      content: (\n        <NavMenu.Columns>\n          <NavMenu.Column title="Sample Title">\n            <NavMenu.Item\n              title="NavMenu.Item title prop"\n              description="This is a NavMenu.Item"\n              href="#"\n            />\n            <Card>\n              <IconMaterial icon="privacy_tip" size="$lg" />\n              <br />\n              This Card is a custom render (it\'s not a NavMenu.Item)\n            </Card>\n          </NavMenu.Column>\n        </NavMenu.Columns>\n      ),\n    },\n  ];\n  return (\n    <NavMenu\n      items={items}\n      css={{ \'abyss-nav-menu-container\': { zIndex: 203 } }}\n    />\n  );\n};\n')),(0,r.kt)("h2",{id:"variant"},"Variant"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"variant")," prop to change the appearance of the NavMenu. Possible values are ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"inverted"),", and the default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"default"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const items = [\n    { title: 'Default Variant', href: '#' },\n    { title: 'Sample link 1', href: '#' },\n  ];\n\n  return <NavMenu items={items} />;\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const items = [\n    { title: 'Inverted Variant', href: '#' },\n    { title: 'Sample link 1', href: '#' },\n  ];\n\n  return <NavMenu items={items} variant=\"inverted\" />;\n};\n")),(0,r.kt)("h2",{id:"position"},"Position"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"position")," prop to set where the menu tabs will appear horizontally. The three options are ",(0,r.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"center"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"end"),", and the default value is ",(0,r.kt)("inlineCode",{parentName:"p"},"start"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const items = [\n    { title: \"'Start' position (Default)\", href: '#' },\n    { title: 'Sample link', href: '#' },\n  ];\n\n  return <NavMenu items={items} />;\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const items = [\n    { title: \"'Center' position\", href: '#' },\n    { title: 'Sample link', href: '#' },\n  ];\n\n  return <NavMenu items={items} position=\"center\" />;\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const items = [\n    { title: \"'End' position\", href: '#' },\n    { title: 'Sample link', href: '#' },\n  ];\n\n  return <NavMenu items={items} position=\"end\" />;\n};\n")),(0,r.kt)("h2",{id:"max-navmenu-width"},"Max NavMenu Width"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"maxNavWidth")," prop to set the maximum width of the NavMenu component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const navMenuItems = [\n    { title: \'Sample Link\', href: \'#\' },\n    {\n      title: \'Dropdown Menu\',\n      content: (\n        <NavMenu.Columns>\n          <NavMenu.Column title="Section Title">\n            <NavMenu.Item\n              title="HELLO"\n              href="#"\n              description="CSS-in-JS with best-in-class developer experience."\n            />\n            <NavMenu.Item\n              title="GOODBYE"\n              href="#"\n              description="Description goes here"\n            />\n          </NavMenu.Column>\n          <NavMenu.Column>\n            <NavMenu.Item\n              title="Sample Item"\n              href="#"\n              description="This is a description"\n            />\n          </NavMenu.Column>\n          <NavMenu.Column title="Other Section Title">\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n          </NavMenu.Column>\n        </NavMenu.Columns>\n      ),\n    },\n  ];\n  return (\n    <NavMenu\n      position="center"\n      css={{ zIndex: \'300\' }}\n      items={navMenuItems}\n      maxNavWidth="744px"\n    />\n  );\n};\n')),(0,r.kt)("h2",{id:"pageheader-component"},"PageHeader Component"),(0,r.kt)("p",null,"If you would like to use this component as part of a page header, check out the ",(0,r.kt)("a",{parentName:"p",href:"/web/ui/page-header"},"PageHeader")," component, as it has integrated NavMenus inside of it already. Example of NavMenus inside PageHeader:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const topMenuItems = [\n    {\n      title: \'Utility link\',\n      content: (\n        <NavMenu.Columns>\n          <NavMenu.Column>\n            <NavMenu.Item\n              title="Test Link"\n              description={\n                \'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vitae lorem posuere augue volutpat tincidunt ut in odio. Sed non vehicula tellus.\'\n              }\n              href="https://abyss.uhc.com/"\n            />\n            <NavMenu.Item\n              title="Test Link 2"\n              description={\n                \'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vitae lorem posuere augue volutpat tincidunt ut in odio. Sed non vehicula tellus.\'\n              }\n              href="https://abyss.uhc.com/"\n            />\n          </NavMenu.Column>\n        </NavMenu.Columns>\n      ),\n    },\n    {\n      title: \'Utility link 2\',\n      href: \'https://abyss.uhc.com/\',\n    },\n    {\n      title: (\n        <Layout.Group space={0}>\n          TrackIt\n          <div\n            style={{\n              display: \'flex\',\n              justifyContent: \'center\',\n              alignItems: \'center\',\n              height: \'14px\',\n              width: \'14px\',\n              borderRadius: \'50%\',\n              border: \'solid 1px #FFAF1F\',\n              backgroundColor: \'#FEF7E5\',\n              marginLeft: \'4px\',\n              fontSize: \'10px\',\n              fontWeight: \'700\',\n              color: \'#002677\',\n            }}\n          >\n            8\n          </div>\n        </Layout.Group>\n      ),\n      href: \'#\',\n    },\n    {\n      title: (\n        <Layout.Group space={0}>\n          John\n          <div\n            style={{\n              display: \'flex\',\n              justifyContent: \'center\',\n              alignItems: \'center\',\n              height: \'14px\',\n              width: \'14px\',\n              borderRadius: \'50%\',\n              border: \'solid 1px #002677\',\n              marginLeft: \'4px\',\n              fontSize: \'10px\',\n              fontWeight: \'$bold\',\n            }}\n          >\n            <IconMaterial icon="person" size="$sm" />\n          </div>\n        </Layout.Group>\n      ),\n      href: \'#\',\n    },\n  ];\n  const bottomMenuItems = [\n    { title: \'Sample Link\', href: \'#\' },\n    {\n      title: \'Dropdown Menu\',\n      content: (\n        <NavMenu.Columns>\n          <NavMenu.Column title="Section Title">\n            <NavMenu.Item\n              title="HELLO"\n              href="#"\n              description="CSS-in-JS with best-in-class developer experience."\n            />\n            <NavMenu.Item\n              title="GOODBYE"\n              href="#"\n              description="Description goes here"\n            />\n          </NavMenu.Column>\n          <NavMenu.Column>\n            <NavMenu.Item\n              title="Sample Item"\n              href="#"\n              description="This is a description"\n            />\n          </NavMenu.Column>\n          <NavMenu.Column title="Other Section Title">\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n            <NavMenu.Item\n              title="Colors"\n              href="#"\n              description="Description goes here"\n            />\n          </NavMenu.Column>\n        </NavMenu.Columns>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <PageHeader\n        headingText="Header Component"\n        topMenuItems={topMenuItems}\n        bottomMenuItems={bottomMenuItems}\n        css={{ \'abyss-header-root\': { zIndex: 210 } }}\n      >\n        <PageHeader.Toolbar space={10}>\n          <SelectInput\n            label="Profile Option 1"\n            value="Test 1"\n            options={[{ value: \'Test 1\', label: \'Test 1\' }]}\n          />\n          <SelectInput\n            label="Profile Option 2"\n            value="Test 2"\n            options={[{ value: \'Test 2\', label: \'Test 2\' }]}\n            css={{\n              \'abyss-select-input-root\': {\n                marginTop: \'0 !important\',\n              },\n            }}\n          />\n        </PageHeader.Toolbar>\n      </PageHeader>\n      <Box color="$white" height="100px">\n        <br />\n        <Label>Your page content goes here</Label>\n      </Box>\n    </React.Fragment>\n  );\n};\n')),(0,r.kt)("h2",{id:"disabled-navmenuitem"},"Disabled NavMenu.Item"),(0,r.kt)("p",null,"Set the ",(0,r.kt)("inlineCode",{parentName:"p"},"isDisabled")," prop to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," to disable an individual NavMenu.Item."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'() => {\n  const navMenuItems = [\n    {\n      title: \'Dropdown Menu\',\n      content: (\n        <NavMenu.Columns>\n          <NavMenu.Column title="Section Title">\n            <NavMenu.Item\n              title="HELLO"\n              href="#"\n              description="CSS-in-JS with best-in-class developer experience."\n              isDisabled\n            />\n            <NavMenu.Item\n              title="GOODBYE"\n              href="#"\n              description="Description goes here"\n            />\n          </NavMenu.Column>\n          <NavMenu.Column>\n            <NavMenu.Item\n              title="Sample onClick"\n              onClick={() => console.log(\'onClick pressed\')}\n              description="A message will be logged to the console when this is clicked."\n            />\n          </NavMenu.Column>\n        </NavMenu.Columns>\n      ),\n    },\n  ];\n  return <NavMenu items={navMenuItems} />;\n};\n'))),(0,r.kt)(c,{label:"Integration",mdxType:"Tab"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={NavMenu}\n  rows={[\n    {\n      name: 'items',\n      type: 'array[shape]',\n      description: 'The items that will be displayed in the navigation menu.',\n    },\n    {\n      name: 'variant',\n      type: \"'default' | 'inverted'\",\n      description: \"The variant for the menu's appearance.\",\n    },\n    {\n      name: 'position',\n      type: \"'start' | 'center' | 'end'\",\n      description: 'Set the position of the menu items',\n    },\n    {\n      name: 'maxNavWidth',\n      type: 'number',\n      description: 'Set the maximum width of the NavMenu component.',\n    },\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={NavMenu.Columns}\n  rows={[\n    {\n      name: 'children',\n      type: 'ReactNode',\n      description: 'The content that will be displayed in the dropdown menu',\n    },\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={NavMenu.Column}\n  rows={[\n    {\n      name: 'title',\n      type: 'ReactNode',\n      description: 'The title of the column',\n    },\n    {\n      name: 'onClick',\n      type: 'function',\n      description: 'Callback fired when NavMenu.Column is clicked',\n    },\n    {\n      name: 'href',\n      type: 'string',\n      description:\n        'The URL that the NavMenu.Column will redirect to when clicked',\n    },\n    {\n      name: 'columnCount',\n      type: 'number',\n      description:\n        'The number of columns present inside the parent NavMenu.Columns',\n    },\n    {\n      name: 'children',\n      type: 'ReactNode',\n      description: 'The content that will be displayed within the column',\n    },\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={NavMenu.Item}\n  rows={[\n    {\n      name: 'title',\n      type: 'ReactNode',\n      description: 'The title of the item',\n    },\n    {\n      name: 'description',\n      type: 'string',\n      description: 'The description of the item',\n    },\n    {\n      name: 'href',\n      type: 'string',\n      description: 'The URL that the Item will redirect to when clicked',\n    },\n    {\n      name: 'isDisabled',\n      type: 'boolean',\n      default: 'false',\n      description: 'The item is disabled when set to true',\n    },\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={NavMenu}\n  rows={[\n    {\n      name: 'nav-menu-root',\n      description: 'NavMenu root element',\n    },\n    {\n      name: 'nav-menu-container',\n      description: 'NavMenu root container',\n    },\n    {\n      name: 'nav-menu-list',\n      description: 'List of items on the main NavMenu bar',\n    },\n    {\n      name: 'nav-menu-link-root',\n      description: 'Main NavMenu bar link items root container',\n    },\n    {\n      name: 'nav-menu-link',\n      description: 'Main NavMenu bar items with an href (no dropdown menu)',\n    },\n    {\n      name: 'nav-menu-viewport-container',\n      description: 'Main NavMenu dropdown viewport container',\n    },\n    {\n      name: 'nav-menu-viewport',\n      description: 'Main NavMenu dropdown viewport',\n    },\n    {\n      name: 'nav-menu-menu',\n      description:\n        'Main NavMenu bar items with content instead of href (has dropdown menu)',\n    },\n    {\n      name: 'nav-menu-menu-item',\n      description: 'NavMenu menu item content container',\n    },\n    {\n      name: 'nav-menu-menu-tigger',\n      description: 'NavMenu menu item trigger',\n    },\n    {\n      name: 'nav-menu-menu-trigger-icon',\n      description: 'NavMenu menu item trigger icon',\n    },\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={NavMenu.Columns}\n  rows={[\n    {\n      name: 'nav-menu-columns-root',\n      description: 'NavMenu.Columns root element',\n    },\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={NavMenu.Column}\n  rows={[\n    {\n      name: 'nav-menu-column-root',\n      description: 'NavMenu.Column root element',\n    },\n    {\n      name: 'nav-menu-column',\n      description: 'NavMenu.Column column',\n    },\n    {\n      name: 'nav-menu-column-title',\n      description: 'Title of the column',\n    },\n    {\n      name: 'nav-menu-column-list',\n      description: 'Column list',\n    },\n  ]}\n/>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={NavMenu.Item}\n  rows={[\n    {\n      name: 'nav-menu-item-root',\n      description: 'NavMenu.Item root element',\n    },\n    {\n      name: 'nav-menu-item-title',\n      description: 'Title of the item',\n    },\n    {\n      name: 'nav-menu-item-link-icon',\n      description:\n        '\"Open in new window\" icon that appears when the href is an external link',\n    },\n    {\n      name: 'nav-menu-item-description',\n      description: 'Description of the item',\n    },\n  ]}\n/>\n"))),(0,r.kt)(c,{label:"Accessibility",mdxType:"Tab"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.AccessibilityTable\n  rows={[\n    {\n      name: 'Tab',\n      description: 'Moves focus to the next focusable element.',\n    },\n    {\n      name: 'Enter',\n      description:\n        'Redirects to the link if the menu bar item is a redirect, or opens the relevant dropdown menu if the item has one.',\n    },\n    {\n      name: 'Space',\n      description:\n        'If focus on a menu bar item with a dropdown, opens the relevant dropdown menu.',\n    },\n    {\n      name: 'Left Arrow',\n      description: 'Focuses the previous menu bar item.',\n    },\n    {\n      name: 'Up Arrow',\n      description: 'Focuses the previous menu bar item.',\n    },\n    {\n      name: 'Right Arrow',\n      description: 'Focuses the next menu bar item.',\n    },\n    {\n      name: 'Down Arrow',\n      description:\n        'Focuses the next menu bar item.  If focus is on an open menu bar item, moves focus into its dropdown menu instead.',\n    },\n    {\n      name: 'Escape',\n      description:\n        'Closes open dropdown menu and moves focus to its menu bar item.',\n    },\n    {\n      name: 'Home',\n      description: 'Moves focus to the first item in the menu.',\n    },\n    {\n      name: 'End',\n      description: 'Moves focus to the last item in the menu.',\n    },\n  ]}\n/>\n"))))}h.isMDXComponent=!0}}]);