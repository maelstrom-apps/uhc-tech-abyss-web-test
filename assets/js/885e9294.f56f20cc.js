"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[4939],{43174:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var a,o=n(7896),r=n(31461),i=(n(2784),n(3905)),l=["components"],s={id:"documentation-guide",title:"Documentation Guide"},p=void 0,d={unversionedId:"developers/documentation-guide",id:"developers/documentation-guide",isDocsHomePage:!1,title:"Documentation Guide",description:"Overview",source:"@site/docs/developers/documentation-guide.md",sourceDirName:"developers",slug:"/developers/documentation-guide",permalink:"/developers/documentation-guide",tags:[],version:"current",frontMatter:{id:"documentation-guide",title:"Documentation Guide"},sidebar:"docs",previous:{title:"Abyss Contributors",permalink:"/developers/abyss-contributors"},next:{title:"Style Customization",permalink:"/developers/style-customization"}},u=[{value:"Overview",id:"overview",children:[],level:2},{value:"Markdown Structure",id:"markdown-structure",children:[],level:2},{value:"Overview Tab",id:"overview-tab",children:[{value:"Import statement",id:"import-statement",children:[],level:6},{value:"Component Sandbox",id:"component-sandbox",children:[],level:6},{value:"Property examples",id:"property-examples",children:[],level:6}],level:2},{value:"Integration Tab",id:"integration-tab",children:[{value:"Example of Integration Tab",id:"example-of-integration-tab",children:[],level:4}],level:2},{value:"Accessibility Tab",id:"accessibility-tab",children:[{value:"Example of Accessibility Tab",id:"example-of-accessibility-tab",children:[{value:"Decorative Icons",id:"decorative-icons",children:[],level:6},{value:"Close Button Guidance",id:"close-button-guidance",children:[],level:6}],level:4}],level:2}],c=(a="ExitLink",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),m={toc:u};function h(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The documentation pages are organized under the ",(0,i.kt)("strong",{parentName:"p"},"docs")," directory shown below. When adding a new component, tool, or guide to Abyss Docs, create a new markdown.md file under the associated folder."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-txt"},"abyss-docs\n\u2514\u2500\u2500 docs\n    \u251c\u2500\u2500 api\n    \u251c\u2500\u2500 developers\n    \u251c\u2500\u2500 foundations\n    \u251c\u2500\u2500 overview\n    \u2514\u2500\u2500 web\n        \u251c\u2500\u2500 hooks\n        \u251c\u2500\u2500 tools\n        \u2514\u2500\u2500 ui\n")),(0,i.kt)("h2",{id:"markdown-structure"},"Markdown Structure"),(0,i.kt)("p",null,"Each markdown file should begin with the following metadata, as an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},"---\nid: carousel\ncategory: Content\ntitle: Carousel\ndescription: Displays information through a series of slides.\ndesign: https://www.figma.com/file/tk08Md4NBBVUPNHQYthmqp/Abyss-Design-System?node-id=3578%3A23477\npagination_prev: web/ui/card\npagination_next: web/ui/step-indicator\n---\n")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Every doc page is divided into three tabs: Overview, Integration and Accessibility. Within the body of the markdown file, use these tabs to group sections of information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<Tab label="Overview">\n  **Overview Content**\n</Tab>\n\n<Tab label="Integration">\n  **Integration Content**\n</Tab>\n\n<Tab label="Accessibility">\n  **Accesibility Content**\n</Tab>\n')),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"overview-tab"},"Overview Tab"),(0,i.kt)("h6",{id:"import-statement"},"Import statement"),(0,i.kt)("p",null,"Add the import statement for the feature like such:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Alert } from '@abyss/web/ui/Alert';\n")),(0,i.kt)("h6",{id:"component-sandbox"},"Component Sandbox"),(0,i.kt)("p",null,"Add Sandbox after the import statement for any components that make sense\nto have a sandbox. Inputs are controlled props that can be adjusted by the user using the Sandbox features. Organize the inputs alphabetically when possible, starting with the simple properties first. Each input contains ",(0,i.kt)("inlineCode",{parentName:"p"},"prop"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," and optionally: ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," and, ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultValue"),".\nTo create a Sandbox, use the convention below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"```jsx sandbox\n{\n  component: 'Alert',\n  inputs: [\n    {\n      prop: 'title',\n      type: 'string',\n    },\n    {\n      prop: 'children',\n      type: 'string',\n    },\n    {\n      prop: 'inlineText',\n      type: 'string',\n    },\n    {\n      prop: 'variant',\n      type: 'select',\n      options: [\n        { label: 'error', value: 'error' },\n        { label: 'success', value: 'success' },\n        { label: 'info', value: 'info' },\n        { label: 'warning', value: 'warning' },\n      ],\n    },\n    {\n      prop: 'hideIcon',\n      type: 'boolean',\n      defaultValue: 'false',\n    },\n  ]\n}\n\n<Alert title=\"Alert Sandbox Title\" variant=\"success\">\n  Alert Sandbox Content\n</Alert>\n")),(0,i.kt)("h6",{id:"property-examples"},"Property examples"),(0,i.kt)("p",null,"Following the Sandbox, it's important to show the ability of each property separate of the others. We break each one down, giving it a title, description and jsx example showing variants of that specific property. For example, if you wanted to show the three sizes for Button, you'd write:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<Button size="$sm">Small</Button>\n<Button size="$md">Medium</Button>\n<Button size="$lg">Large</Button>\n')),(0,i.kt)("br",null),(0,i.kt)("p",null,"Since there are two visual variants of Button, ",(0,i.kt)("inlineCode",{parentName:"p"},"primary")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"outline"),", which use the same sizing convention (",(0,i.kt)("inlineCode",{parentName:"p"},"$sm"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$md"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$lg"),") we can combine the two visuals under the one size example by organizing them utilizing the built-in Layout component from the Abyss library. Here's what the combined example looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<Layout.Stack alignItems="left">\n  <Layout.Group>\n    <Button rounded size="$sm">\n      <IconMaterial icon="home" color="$white" />\n    </Button>\n    <Button rounded size="$md">\n      <IconMaterial icon="home" color="$white" />\n    </Button>\n    <Button rounded size="$lg">\n      <IconMaterial icon="home" color="$white" />\n    </Button>\n  </Layout.Group>\n  <Layout.Group>\n    <Button size="$sm">Small</Button>\n    <Button size="$md">Medium</Button>\n    <Button size="$lg">Large</Button>\n  </Layout.Group>\n  <Layout.Group>\n    <Button size="$sm" variant="outline">\n      Small\n    </Button>\n    <Button size="$md" variant="outline">\n      Medium\n    </Button>\n    <Button size="$lg" variant="outline">\n      Large\n    </Button>\n  </Layout.Group>\n</Layout.Stack>\n')),(0,i.kt)("br",null),(0,i.kt)("p",null,"To follow the complexity of each prop example, use the following rules to properly document the feature:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"When organizing the list of examples,")," they should be ordered from simple to complex starting with size or width"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Start each example case"),' with "Use the ',(0,i.kt)("inlineCode",{parentName:"li"},"prop-name"),' property to..." followed by an explanation'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"For props with a pre-set list of variants,"),' add a sentence listing out the variant options "Variants include ',(0,i.kt)("inlineCode",{parentName:"li"},"variant-1"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"variant-2"),'", and so on'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"For props with a default value,"),' add "The default value is set to ',(0,i.kt)("inlineCode",{parentName:"li"},"value"),'"'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"For the customization example section,")," include the sentence \u201cIf further customization is needed, most styles of ",(0,i.kt)("inlineCode",{parentName:"li"},"component-name")," can be overridden using ",(0,i.kt)("inlineCode",{parentName:"li"},"css"),"\u201d"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Size and width examples")," should include the list of Abyss style sizes (including the conversion of size to units in the label/text like $md = 16px), followed by percent, and px"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Examples may include:")," size, width, isDisabled, controlled, uncontrolled, loading, and customization. Take a look at other doc pages for examples of how to best format the component you're documenting")),(0,i.kt)("h2",{id:"integration-tab"},"Integration Tab"),(0,i.kt)("p",null,"Implementing a props table and classes table for the component, and any sub-components gives users an in-depth view of the component without having to visit the code. (The below example is modified for this template. Please refer to the Alert component for a full list of props and classes)."),(0,i.kt)("p",null,"Follow these rules when creating a Props Table:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Prop name")," is lowercase"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Type")," is one of the following: boolean, function, array, shape, number, string, number | string"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Default value")," is the default value from the defaultProps list, or null"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description")," first word is uppercase, followed by a brief description of the props use")),(0,i.kt)("p",null,"Follow these rules when creating a Classes Table:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Class name")," starts with a period (.), is lowercase and uses dashes to separate words"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description")," first word is uppercase, followed by a brief description of the class")),(0,i.kt)("h4",{id:"example-of-integration-tab"},"Example of Integration Tab"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={Alert}\n  rows={[\n    {\n      name: 'title',\n      type: 'string',\n      description: 'Sets the tile for the alert',\n    },\n    {\n      name: 'children',\n      type: 'ReactNode',\n      description: 'The contents of the alert component',\n    },\n    {\n      name: 'variant',\n      type: 'string',\n      defaultValue: 'error',\n      description:\n        'Change the alert style: `info` | `success` | `error`| `warning`',\n    },\n    {\n      name: 'errorCode',\n      type: 'string',\n      description:\n        'Set the error code to be displayed in the alert. Current date/time is appended to errorCode',\n    },\n    {\n      name: 'ariaLive',\n      type: 'string',\n      defaultValue: 'polite',\n      description:\n        'Set the priority with which screen reader should treat updates to live regions: `polite` | `assertive`',\n    },\n  ]}\n/>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.ClassesTable\n  of={Alert}\n  rows={[\n    {\n      name: 'alert-root',\n      description: 'Alert root element',\n    },\n    {\n      name: 'alert-container',\n      description: 'Alert element container',\n    },\n    {\n      name: 'alert-header-container',\n      description: 'Header element container',\n    },\n    {\n      name: 'alert-header-section',\n      description: 'Alert header element',\n    },\n    {\n      name: 'alert-body',\n      description: 'Alert body element',\n    },\n  ]}\n/>\n")),(0,i.kt)("h2",{id:"accessibility-tab"},"Accessibility Tab"),(0,i.kt)("p",null,"This tab is important to be as thorough and in-detail as possible, adhering to the WAI-ARIA design guidelines."),(0,i.kt)("p",null,"Follow this pattern when creating the Accessibility tab:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Brief description")," write a description about the component, and link to the WAI-ARIA website page referring to the component"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Sandbox")," allows our A11Y partners to practice assistive technology on the component in a dedicated field"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Keyboard interactions table")," referring to the WAI-ARIA keyboard interactions, create a table with all interactions usable for the specific component"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Additional guidance")," note any additional guidance features of the component, including (but not limited to) Decorative Icons, Loading State, etc.")),(0,i.kt)("h4",{id:"example-of-accessibility-tab"},"Example of Accessibility Tab"),(0,i.kt)("p",null,"An alert is an element that displays a brief, important message in a way that attracts the user's attention without interrupting the user's task. Dynamically rendered alerts are automatically announced by most screen readers, and in some operating systems, they may trigger an alert sound. It is important to note that, at this time, screen readers do not inform users of alerts that are present on the page before page load completes."),(0,i.kt)("p",null,"Adheres to the ",(0,i.kt)(c,{href:"https://www.w3.org/TR/wai-aria-practices-1.2/#alert",mdxType:"ExitLink"},"Alert WAI-ARIA design pattern"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Layout.Stack grow>\n  <Alert title="Error Alert" variant="error" onClose={() => {}} />\n  <Alert title="Success Alert" variant="success" onClose={() => {}} />\n  <Alert title="Info Alert" variant="info" onClose={() => {}} />\n  <Alert title="Warning Alert" variant="warning" onClose={() => {}} />\n</Layout.Stack>\n')),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.AccessibilityTable\n  title=\"Alert\"\n  rows={[\n    {\n      name: 'Tab',\n      description: 'Puts focus on the Button inside of the Alert',\n    },\n    {\n      name: 'Enter',\n      description:\n        'When focus is on the Button, pressing enter will press the Button inside the Alert',\n    },\n    {\n      name: 'Space',\n      description:\n        'When focus is on the Button, pressing enter will press the Button inside the Alert',\n    },\n  ]}\n/>\n")),(0,i.kt)("h6",{id:"decorative-icons"},"Decorative Icons"),(0,i.kt)("p",null,"In the alert below, since the word \u201cWarning\u201d appears next to the icon, the icon is considered decorative and must be ignored by assistive technology. The icon does not need to meet the 3:1 minimum contrast requirement against its adjacent color."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Alert title="Warning Alert" variant="warning" />\n')),(0,i.kt)("h6",{id:"close-button-guidance"},"Close Button Guidance"),(0,i.kt)("p",null,"Keyboard operation: if the \u201cclose\u201d button is used on the alert, it must be keyboard accessible. A keyboard only user must be able to tab to the button, and activate it with the space bar and the enter key."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Alert title="Alert With Close Button" onClose={() => {}} />\n')),(0,i.kt)("br",null),(0,i.kt)("p",null,"Note: per the WAI ARIA specification, when the \u201calert\u201d role is used, the user should not be required to close the alert. In this case, it is assumed that the close button is provided as a convenience and the user is not explicitly required to close the alert."))}h.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);