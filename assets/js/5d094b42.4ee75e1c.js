"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[8932],{25493:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>u,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var a,r=t(7896),o=t(31461),c=(t(2784),t(3905)),i=["components"],l={id:"accumulator",category:"Data Viz",title:"Accumulator",description:"Percentage counter"},u=void 0,p={unversionedId:"mobile/ui/accumulator",id:"mobile/ui/accumulator",isDocsHomePage:!1,title:"Accumulator",description:"Percentage counter",source:"@site/docs/mobile/ui/Accumulator.md",sourceDirName:"mobile/ui",slug:"/mobile/ui/accumulator",permalink:"/mobile/ui/accumulator",tags:[],version:"current",frontMatter:{id:"accumulator",category:"Data Viz",title:"Accumulator",description:"Percentage counter"},sidebar:"mobile",previous:{title:"IconBrand",permalink:"/mobile/foundations/uhc/icon-brand"},next:{title:"Badge",permalink:"/mobile/ui/badge"}},m=[{value:"Percentage",id:"percentage",children:[],level:2},{value:"Animation Delay",id:"animation-delay",children:[],level:2}],s=(a="Tab",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,c.kt)("div",e)}),d={toc:m};function g(e){var n=e.components,t=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)(s,{label:"Overview",mdxType:"Tab"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Accumulator } from '@abyss/mobile/ui/Accumulator';\n")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"sandbox",sandbox:!0},"{\n  component: 'Accumulator',\n  inputs: [\n    {\n      prop: 'percentage',\n      type: 'number',\n      defaultValue: 50\n    },\n    {\n      prop: 'animationDelay',\n      type: 'number',\n    },\n  ]\n}\n\n<Accumulator />\n")),(0,c.kt)("h2",{id:"percentage"},"Percentage"),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"percentage")," prop determines how far the accumulator will move. The prop accepts numbers between ",(0,c.kt)("inlineCode",{parentName:"p"},"0")," and ",(0,c.kt)("inlineCode",{parentName:"p"},"100"),"\nThe default is ",(0,c.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Layout.Stack grow>\n  <Accumulator percentage={100} />\n  <Accumulator percentage={75} />\n  <Accumulator percentage={50} />\n  <Accumulator percentage={25} />\n  <Accumulator percentage={10} />\n  <Accumulator percentage={0} />\n</Layout.Stack>\n")),(0,c.kt)("h2",{id:"animation-delay"},"Animation Delay"),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"animationDelay")," prop is used to start the animation after a given delay (milliseconds).\nThe default is ",(0,c.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"() => {\n  const [animated, toggle] = useToggle(false);\n  const percentage = animated ? 40 : 0;\n  return (\n    <Layout.Stack grow>\n      <Accumulator percentage={percentage} animationDelay={0} />\n      <Accumulator percentage={percentage} animationDelay={300} />\n      <Accumulator percentage={percentage} animationDelay={600} />\n      <Accumulator percentage={percentage} animationDelay={900} />\n      <Accumulator percentage={percentage} animationDelay={1200} />\n      <Layout.Space space={20} />\n      <Button onPress={toggle}>Start Animation</Button>\n    </Layout.Stack>\n  );\n};\n"))),(0,c.kt)(s,{label:"Integration",mdxType:"Tab"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},"<Docs.PropsTable\n  of={Accumulator}\n  rows={[\n    {\n      name: 'percentage',\n      type: 'number',\n      description:\n        'The percentage of the bar that is filled. Value between 0 and 100',\n    },\n    {\n      name: 'animationDelay',\n      type: 'number',\n      description: 'The amount of milliseconds before animating the bar',\n    },\n  ]}\n/>\n"))))}g.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(2784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(t),d=r,g=s["".concat(l,".").concat(d)]||s[d]||m[d]||o;return t?a.createElement(g,c(c({ref:n},p),{},{components:t})):a.createElement(g,c({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=s;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var u=2;u<o;u++)c[u]=t[u];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);