"use strict";(self.webpackChunkabyss_docs=self.webpackChunkabyss_docs||[]).push([[4647],{16839:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>p,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var o,i=t(7896),l=t(31461),a=(t(2784),t(3905)),r=["components"],s={id:"typography",title:"Typography",category:"Foundations",description:"Typography for UHC brands",pagination_next:null},p=void 0,d={unversionedId:"mobile/foundations/uhc/typography",id:"mobile/foundations/uhc/typography",isDocsHomePage:!1,title:"Typography",description:"Typography for UHC brands",source:"@site/docs/mobile/foundations/uhc/typography.md",sourceDirName:"mobile/foundations/uhc",slug:"/mobile/foundations/uhc/typography",permalink:"/mobile/foundations/uhc/typography",tags:[],version:"current",frontMatter:{id:"typography",title:"Typography",category:"Foundations",description:"Typography for UHC brands",pagination_next:null},sidebar:"mobile",previous:{title:"Contact Us",permalink:"/contact-us"}},c=[{value:"Overview",id:"overview",children:[],level:2},{value:"Headings",id:"headings",children:[{value:"<b>Recommendations</b>",id:"recommendations",children:[],level:4}],level:2},{value:"Body Copy Text",id:"body-copy-text",children:[],level:2}],b=(o="ExitLink",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)}),y={toc:c};function g(e){var n=e.components,t=(0,l.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Typography is the art and technique of arranging type to make written language legible. In the Abyss library, ",(0,a.kt)("a",{parentName:"p",href:"/mobile/ui/heading"},"Heading")," and ",(0,a.kt)("a",{parentName:"p",href:"/mobile/ui/text"},"Text")," dive into the detail behind text formatting for UHC branding. More in depth guidance on typography can be found below and in the ",(0,a.kt)(b,{href:"https://brand.uhc.com/typography",mdxType:"ExitLink"},"UHC Brand Page"),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"headings"},"Headings"),(0,a.kt)("p",null,"Headings identify chunks of related content on a page and establish the hierarchy showing how those chunks of content relate to each other. If someone reads only the headings on a page, they will get a general understanding of the information presented."),(0,a.kt)("p",null,"HTML defines six heading levels: H1 to H6."),(0,a.kt)("p",null,"H1 identifies an entire page, or overall topic, and is the most important level. There should only be 1 H1 per page."),(0,a.kt)("p",null,"Find further documentation in the ",(0,a.kt)("a",{parentName:"p",href:"/mobile/ui/heading"},"Heading")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},'<Web.Layout.Stack grow>\n  <Docs.TypeTileMobile type="heading1" fontWeight="600">\n    <Heading>H | 1 | SemiBold</Heading>\n  </Docs.TypeTileMobile>\n  <Docs.TypeTileMobile type="heading2" fontWeight="600">\n    <Heading offset={2}>H | 2 | SemiBold</Heading>\n  </Docs.TypeTileMobile>\n  <Docs.TypeTileMobile type="heading3" fontWeight="600">\n    <Heading offset={3}>H | 3 | SemiBold</Heading>\n  </Docs.TypeTileMobile>\n  <Docs.TypeTileMobile type="heading4" fontWeight="600">\n    <Heading offset={4}>H | 4 | SemiBold</Heading>\n  </Docs.TypeTileMobile>\n  <Docs.TypeTileMobile type="heading5" fontWeight="700">\n    <Heading offset={5}>H | 5 | Bold</Heading>\n  </Docs.TypeTileMobile>\n  <Docs.TypeTileMobile type="heading6" fontWeight="900">\n    <Heading offset={6}>H | 6 | Heavy</Heading>\n  </Docs.TypeTileMobile>\n</Web.Layout.Stack>\n')),(0,a.kt)("h4",{id:"recommendations"},(0,a.kt)("b",null,"Recommendations")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("b",null,"Always")," have an H1 heading for the page title"),(0,a.kt)("li",null,"Keep headings scannable"),(0,a.kt)("li",null,"Headings are always sentence-case"),(0,a.kt)("li",null,"Do not use punctuation in headings")),(0,a.kt)("b",null,"IMPORTANT: For way-finding, every page must have an H1 available (especially for screen readers) that describes the main purpose of the page such as \u201cClaims & Benefits\u201d"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"body-copy-text"},"Body Copy Text"),(0,a.kt)("p",null,"SF Pro is our primary iOS typeface and Roboto is our primary Android typeface for body copy. All weights are available in italics."),(0,a.kt)("p",null,"Regular copy is the default style for the majority of text on pages. Small copy is the secondary style for context on pages and is used for secondary text styles, as well as footnotes and legal messaging or less important content. Find further documentation in the ",(0,a.kt)("a",{parentName:"p",href:"/web/ui/text"},"Text Component"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},'() => {\n  const lorem =\n    \'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.\';\n\n  return (\n    <Web.Layout.Stack grow>\n      <Docs.TypeTileMobile size="lg" fontWeight="600">\n        <Web.Label>P | LG | SemiBold</Web.Label>\n        <Text size="$lg" fontWeight="$semibold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="lg" fontWeight="400">\n        <Web.Label>P | LG | Regular</Web.Label>\n        <Text size="$lg" fontWeight="$normal">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="md" fontWeight="700">\n        <Web.Label>P | MD | Bold</Web.Label>\n        <Text size="$md" fontWeight="$bold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="md" fontWeight="600">\n        <Web.Label>P | MD | SemiBold</Web.Label>\n        <Text size="$md" fontWeight="$semibold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="md" fontWeight="400">\n        <Web.Label>P | MD | Regular</Web.Label>\n        <Text size="$md" fontWeight="$normal">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="sm" fontWeight="900">\n        <Web.Label>P | SM | Heavy</Web.Label>\n        <Text size="$sm" fontWeight="$heavy">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="sm" fontWeight="700">\n        <Web.Label>P | SM | Bold</Web.Label>\n        <Text size="$sm" fontWeight="$bold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="sm" fontWeight="600">\n        <Web.Label>P | SM | SemiBold</Web.Label>\n        <Text size="$sm" fontWeight="$semibold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="sm" fontWeight="400">\n        <Web.Label>P | SM | Regular</Web.Label>\n        <Text size="$sm" fontWeight="$normal">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="sm" fontWeight="700">\n        <Web.Label>P | XS | Bold</Web.Label>\n        <Text size="$xs" fontWeight="$bold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="xs" fontWeight="600">\n        <Web.Label>P | XS | SemiBold</Web.Label>\n        <Text size="$xs" fontWeight="$semibold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="xs" fontWeight="500">\n        <Web.Label>P | XS | Medium</Web.Label>\n        <Text size="$xs" fontWeight="$medium">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="2xs" fontWeight="600">\n        <Web.Label>P | 2XS | SemiBold</Web.Label>\n        <Text size="$2xs" fontWeight="$semibold">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n      <Docs.TypeTileMobile size="2xs" fontWeight="500">\n        <Web.Label>P | 2XS | Medium</Web.Label>\n        <Text size="$2xs" fontWeight="$medium">\n          {lorem}\n        </Text>\n      </Docs.TypeTileMobile>\n    </Web.Layout.Stack>\n  );\n};\n')))}g.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>y});var o=t(2784);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},b=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),b=p(t),y=i,g=b["".concat(s,".").concat(y)]||b[y]||c[y]||l;return t?o.createElement(g,a(a({ref:n},d),{},{components:t})):o.createElement(g,a({ref:n},d))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=b;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r.mdxType="string"==typeof e?e:i,a[1]=r;for(var p=2;p<l;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);